ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_1_Init,"ax",%progbits
  20              		.align	2
  21              		.global	UART_1_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_1_Init, %function
  25              	UART_1_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\UART_1.c"
   1:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_1.c **** * File Name: UART_1.c
   3:Generated_Source\PSoC5/UART_1.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_1.c **** *
   5:Generated_Source\PSoC5/UART_1.c **** * Description:
   6:Generated_Source\PSoC5/UART_1.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART_1.c **** *
   8:Generated_Source\PSoC5/UART_1.c **** * Note:
   9:Generated_Source\PSoC5/UART_1.c **** *
  10:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART_1.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART_1.c **** 
  17:Generated_Source\PSoC5/UART_1.c **** #include "UART_1.h"
  18:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART_1.c ****     #include "UART_1_IntClock.h"
  20:Generated_Source\PSoC5/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART_1.c **** 
  22:Generated_Source\PSoC5/UART_1.c **** 
  23:Generated_Source\PSoC5/UART_1.c **** /***************************************
  24:Generated_Source\PSoC5/UART_1.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART_1.c **** ***************************************/
  26:Generated_Source\PSoC5/UART_1.c **** 
  27:Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:Generated_Source\PSoC5/UART_1.c **** 
  29:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 2


  31:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART_1.c **** 
  35:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART_1.c **** 
  48:Generated_Source\PSoC5/UART_1.c **** 
  49:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Start
  51:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART_1.c **** *
  53:Generated_Source\PSoC5/UART_1.c **** * Summary:
  54:Generated_Source\PSoC5/UART_1.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Enable() function.
  58:Generated_Source\PSoC5/UART_1.c **** *
  59:Generated_Source\PSoC5/UART_1.c **** * Parameters:
  60:Generated_Source\PSoC5/UART_1.c **** *  None.
  61:Generated_Source\PSoC5/UART_1.c **** *
  62:Generated_Source\PSoC5/UART_1.c **** * Return:
  63:Generated_Source\PSoC5/UART_1.c **** *  None.
  64:Generated_Source\PSoC5/UART_1.c **** *
  65:Generated_Source\PSoC5/UART_1.c **** * Global variables:
  66:Generated_Source\PSoC5/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
  69:Generated_Source\PSoC5/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:Generated_Source\PSoC5/UART_1.c **** *
  72:Generated_Source\PSoC5/UART_1.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART_1.c **** *  No.
  74:Generated_Source\PSoC5/UART_1.c **** *
  75:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART_1.c **** void UART_1_Start(void) 
  77:Generated_Source\PSoC5/UART_1.c **** {
  78:Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART_1.c ****     if(UART_1_initVar == 0u)
  80:Generated_Source\PSoC5/UART_1.c ****     {
  81:Generated_Source\PSoC5/UART_1.c ****         UART_1_Init();
  82:Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
  83:Generated_Source\PSoC5/UART_1.c ****     }
  84:Generated_Source\PSoC5/UART_1.c **** 
  85:Generated_Source\PSoC5/UART_1.c ****     UART_1_Enable();
  86:Generated_Source\PSoC5/UART_1.c **** }
  87:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 3


  88:Generated_Source\PSoC5/UART_1.c **** 
  89:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Init
  91:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART_1.c **** *
  93:Generated_Source\PSoC5/UART_1.c **** * Summary:
  94:Generated_Source\PSoC5/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:Generated_Source\PSoC5/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART_1.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART_1.c **** *
  99:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 100:Generated_Source\PSoC5/UART_1.c **** *  None.
 101:Generated_Source\PSoC5/UART_1.c **** *
 102:Generated_Source\PSoC5/UART_1.c **** * Return:
 103:Generated_Source\PSoC5/UART_1.c **** *  None.
 104:Generated_Source\PSoC5/UART_1.c **** *
 105:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART_1.c **** void UART_1_Init(void) 
 107:Generated_Source\PSoC5/UART_1.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 108:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:Generated_Source\PSoC5/UART_1.c **** 
 110:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 113:Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART_1.c ****             UART_1_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART_1.c **** 
 117:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART_1.c **** 
 123:Generated_Source\PSoC5/UART_1.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
  33              		.loc 1 124 0
  34 0000 7222     		movs	r2, #114
  35 0002 074B     		ldr	r3, .L2
  36 0004 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
  37              		.loc 1 126 0
  38 0006 2022     		movs	r2, #32
  39 0008 013B     		subs	r3, r3, #1
  40 000a 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART_1.c **** 
 129:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART_1.c ****             /* Set TX interrupt vector and priority */
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 4


 132:Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
 133:Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART_1.c **** 
 136:Generated_Source\PSoC5/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
  41              		.loc 1 138 0
  42 000c 0622     		movs	r2, #6
  43 000e 5D3B     		subs	r3, r3, #93
  44 0010 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
  45              		.loc 1 139 0
  46 0012 4722     		movs	r2, #71
  47 0014 1033     		adds	r3, r3, #16
  48 0016 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART_1.c ****         #else
 142:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART_1.c **** 
 146:Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART_1.c ****         #else
 150:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
  49              		.loc 1 150 0
  50 0018 0022     		movs	r2, #0
  51 001a 5133     		adds	r3, r3, #81
  52 001c 1A70     		strb	r2, [r3]
  53 001e 7047     		bx	lr
  54              	.L3:
  55              		.align	2
  56              	.L2:
  57 0020 8A640040 		.word	1073767562
  58              		.cfi_endproc
  59              	.LFE1:
  60              		.size	UART_1_Init, .-UART_1_Init
  61              		.section	.text.UART_1_Enable,"ax",%progbits
  62              		.align	2
  63              		.global	UART_1_Enable
  64              		.thumb
  65              		.thumb_func
  66              		.type	UART_1_Enable, %function
  67              	UART_1_Enable:
  68              	.LFB2:
 151:Generated_Source\PSoC5/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART_1.c **** 
 153:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:Generated_Source\PSoC5/UART_1.c **** 
 155:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART_1.c ****         UART_1_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART_1.c **** }
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 5


 161:Generated_Source\PSoC5/UART_1.c **** 
 162:Generated_Source\PSoC5/UART_1.c **** 
 163:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Enable
 165:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART_1.c **** *
 167:Generated_Source\PSoC5/UART_1.c **** * Summary:
 168:Generated_Source\PSoC5/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
 170:Generated_Source\PSoC5/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART_1.c **** *  operation.
 172:Generated_Source\PSoC5/UART_1.c **** 
 173:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 174:Generated_Source\PSoC5/UART_1.c **** *  None.
 175:Generated_Source\PSoC5/UART_1.c **** *
 176:Generated_Source\PSoC5/UART_1.c **** * Return:
 177:Generated_Source\PSoC5/UART_1.c **** *  None.
 178:Generated_Source\PSoC5/UART_1.c **** *
 179:Generated_Source\PSoC5/UART_1.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART_1.c **** *
 182:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART_1.c **** void UART_1_Enable(void) 
 184:Generated_Source\PSoC5/UART_1.c **** {
  69              		.loc 1 184 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73 0000 08B5     		push	{r3, lr}
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 3, -8
  76              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
  77              		.loc 1 186 0
  78 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  79              	.LVL0:
 187:Generated_Source\PSoC5/UART_1.c **** 
 188:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:Generated_Source\PSoC5/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
  80              		.loc 1 190 0
  81 0006 094A     		ldr	r2, .L6
  82 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  83 000a 43F02003 		orr	r3, r3, #32
  84 000e 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART_1.c **** 
 192:Generated_Source\PSoC5/UART_1.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
  85              		.loc 1 193 0
  86 0010 013A     		subs	r2, r2, #1
  87 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  88 0014 43F01003 		orr	r3, r3, #16
  89 0018 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART_1.c **** 
 195:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableRxInt();
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 6


 197:Generated_Source\PSoC5/UART_1.c **** 
 198:Generated_Source\PSoC5/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART_1.c **** 
 204:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 205:Generated_Source\PSoC5/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART_1.c **** 
 210:Generated_Source\PSoC5/UART_1.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
  90              		.loc 1 211 0
  91 001a 0432     		adds	r2, r2, #4
  92 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  93 001e 43F01003 		orr	r3, r3, #16
  94 0022 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 215:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART_1.c **** 
 218:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
 220:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART_1.c **** 
 222:Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
  95              		.loc 1 222 0
  96 0024 FFF7FEFF 		bl	CyExitCriticalSection
  97              	.LVL1:
  98 0028 08BD     		pop	{r3, pc}
  99              	.L7:
 100 002a 00BF     		.align	2
 101              	.L6:
 102 002c 9A640040 		.word	1073767578
 103              		.cfi_endproc
 104              	.LFE2:
 105              		.size	UART_1_Enable, .-UART_1_Enable
 106              		.section	.text.UART_1_Start,"ax",%progbits
 107              		.align	2
 108              		.global	UART_1_Start
 109              		.thumb
 110              		.thumb_func
 111              		.type	UART_1_Start, %function
 112              	UART_1_Start:
 113              	.LFB0:
  77:Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
 114              		.loc 1 77 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 08B5     		push	{r3, lr}
 119              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 7


 120              		.cfi_offset 3, -8
 121              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART_1.c ****     {
 122              		.loc 1 79 0
 123 0002 054B     		ldr	r3, .L11
 124 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 125 0006 23B9     		cbnz	r3, .L9
  81:Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
 126              		.loc 1 81 0
 127 0008 FFF7FEFF 		bl	UART_1_Init
 128              	.LVL2:
  82:Generated_Source\PSoC5/UART_1.c ****     }
 129              		.loc 1 82 0
 130 000c 0122     		movs	r2, #1
 131 000e 024B     		ldr	r3, .L11
 132 0010 1A70     		strb	r2, [r3]
 133              	.L9:
  85:Generated_Source\PSoC5/UART_1.c **** }
 134              		.loc 1 85 0
 135 0012 FFF7FEFF 		bl	UART_1_Enable
 136              	.LVL3:
 137 0016 08BD     		pop	{r3, pc}
 138              	.L12:
 139              		.align	2
 140              	.L11:
 141 0018 00000000 		.word	.LANCHOR0
 142              		.cfi_endproc
 143              	.LFE0:
 144              		.size	UART_1_Start, .-UART_1_Start
 145              		.section	.text.UART_1_Stop,"ax",%progbits
 146              		.align	2
 147              		.global	UART_1_Stop
 148              		.thumb
 149              		.thumb_func
 150              		.type	UART_1_Stop, %function
 151              	UART_1_Stop:
 152              	.LFB3:
 223:Generated_Source\PSoC5/UART_1.c **** }
 224:Generated_Source\PSoC5/UART_1.c **** 
 225:Generated_Source\PSoC5/UART_1.c **** 
 226:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Stop
 228:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART_1.c **** *
 230:Generated_Source\PSoC5/UART_1.c **** * Summary:
 231:Generated_Source\PSoC5/UART_1.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART_1.c **** *
 233:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 234:Generated_Source\PSoC5/UART_1.c **** *  None.
 235:Generated_Source\PSoC5/UART_1.c **** *
 236:Generated_Source\PSoC5/UART_1.c **** * Return:
 237:Generated_Source\PSoC5/UART_1.c **** *  None.
 238:Generated_Source\PSoC5/UART_1.c **** *
 239:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART_1.c **** void UART_1_Stop(void) 
 241:Generated_Source\PSoC5/UART_1.c **** {
 153              		.loc 1 241 0
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 8


 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157 0000 08B5     		push	{r3, lr}
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 3, -8
 160              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 161              		.loc 1 243 0
 162 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 163              	.LVL4:
 244:Generated_Source\PSoC5/UART_1.c **** 
 245:Generated_Source\PSoC5/UART_1.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 164              		.loc 1 247 0
 165 0006 094A     		ldr	r2, .L15
 166 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 167 000a 03F0DF03 		and	r3, r3, #223
 168 000e 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART_1.c **** 
 250:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART_1.c **** 
 256:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 258:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART_1.c **** 
 260:Generated_Source\PSoC5/UART_1.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 262:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 169              		.loc 1 262 0
 170 0010 013A     		subs	r2, r2, #1
 171 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 172 0014 03F0EF03 		and	r3, r3, #239
 173 0018 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART_1.c **** 
 264:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableRxInt();
 266:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART_1.c **** 
 269:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 174              		.loc 1 270 0
 175 001a 0432     		adds	r2, r2, #4
 176 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 177 001e 03F0EF03 		and	r3, r3, #239
 178 0022 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART_1.c **** 
 272:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 9


 274:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART_1.c **** 
 277:Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 179              		.loc 1 277 0
 180 0024 FFF7FEFF 		bl	CyExitCriticalSection
 181              	.LVL5:
 182 0028 08BD     		pop	{r3, pc}
 183              	.L16:
 184 002a 00BF     		.align	2
 185              	.L15:
 186 002c 9A640040 		.word	1073767578
 187              		.cfi_endproc
 188              	.LFE3:
 189              		.size	UART_1_Stop, .-UART_1_Stop
 190              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 191              		.align	2
 192              		.global	UART_1_ReadControlRegister
 193              		.thumb
 194              		.thumb_func
 195              		.type	UART_1_ReadControlRegister, %function
 196              	UART_1_ReadControlRegister:
 197              	.LFB4:
 278:Generated_Source\PSoC5/UART_1.c **** }
 279:Generated_Source\PSoC5/UART_1.c **** 
 280:Generated_Source\PSoC5/UART_1.c **** 
 281:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART_1.c **** *
 285:Generated_Source\PSoC5/UART_1.c **** * Summary:
 286:Generated_Source\PSoC5/UART_1.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART_1.c **** *
 288:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 289:Generated_Source\PSoC5/UART_1.c **** *  None.
 290:Generated_Source\PSoC5/UART_1.c **** *
 291:Generated_Source\PSoC5/UART_1.c **** * Return:
 292:Generated_Source\PSoC5/UART_1.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART_1.c **** *
 294:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART_1.c **** {
 198              		.loc 1 296 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART_1.c ****         return(0u);
 299:Generated_Source\PSoC5/UART_1.c ****     #else
 300:Generated_Source\PSoC5/UART_1.c ****         return(UART_1_CONTROL_REG);
 301:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART_1.c **** }
 203              		.loc 1 302 0
 204 0000 0020     		movs	r0, #0
 205 0002 7047     		bx	lr
 206              		.cfi_endproc
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 10


 207              	.LFE4:
 208              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 209              		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 210              		.align	2
 211              		.global	UART_1_WriteControlRegister
 212              		.thumb
 213              		.thumb_func
 214              		.type	UART_1_WriteControlRegister, %function
 215              	UART_1_WriteControlRegister:
 216              	.LFB5:
 303:Generated_Source\PSoC5/UART_1.c **** 
 304:Generated_Source\PSoC5/UART_1.c **** 
 305:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 307:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART_1.c **** *
 309:Generated_Source\PSoC5/UART_1.c **** * Summary:
 310:Generated_Source\PSoC5/UART_1.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART_1.c **** *
 312:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 313:Generated_Source\PSoC5/UART_1.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART_1.c **** *
 315:Generated_Source\PSoC5/UART_1.c **** * Return:
 316:Generated_Source\PSoC5/UART_1.c **** *  None.
 317:Generated_Source\PSoC5/UART_1.c **** *
 318:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART_1.c **** {
 217              		.loc 1 320 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 222              	.LVL6:
 223 0000 7047     		bx	lr
 224              		.cfi_endproc
 225              	.LFE5:
 226              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 227 0002 00BF     		.section	.text.UART_1_SetRxInterruptMode,"ax",%progbits
 228              		.align	2
 229              		.global	UART_1_SetRxInterruptMode
 230              		.thumb
 231              		.thumb_func
 232              		.type	UART_1_SetRxInterruptMode, %function
 233              	UART_1_SetRxInterruptMode:
 234              	.LFB6:
 321:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART_1.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART_1.c ****         {
 324:Generated_Source\PSoC5/UART_1.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART_1.c ****         }
 326:Generated_Source\PSoC5/UART_1.c ****     #else
 327:Generated_Source\PSoC5/UART_1.c ****        UART_1_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART_1.c **** }
 330:Generated_Source\PSoC5/UART_1.c **** 
 331:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 11


 332:Generated_Source\PSoC5/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 333:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART_1.c ****     *
 337:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 338:Generated_Source\PSoC5/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART_1.c ****     *
 340:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART_1.c ****     *
 352:Generated_Source\PSoC5/UART_1.c ****     * Return:
 353:Generated_Source\PSoC5/UART_1.c ****     *  None.
 354:Generated_Source\PSoC5/UART_1.c ****     *
 355:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 356:Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART_1.c ****     *
 358:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART_1.c ****     {
 235              		.loc 1 360 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240              	.LVL7:
 361:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 241              		.loc 1 361 0
 242 0000 014B     		ldr	r3, .L20
 243 0002 1870     		strb	r0, [r3]
 244 0004 7047     		bx	lr
 245              	.L21:
 246 0006 00BF     		.align	2
 247              	.L20:
 248 0008 89640040 		.word	1073767561
 249              		.cfi_endproc
 250              	.LFE6:
 251              		.size	UART_1_SetRxInterruptMode, .-UART_1_SetRxInterruptMode
 252              		.section	.text.UART_1_ReadRxData,"ax",%progbits
 253              		.align	2
 254              		.global	UART_1_ReadRxData
 255              		.thumb
 256              		.thumb_func
 257              		.type	UART_1_ReadRxData, %function
 258              	UART_1_ReadRxData:
 259              	.LFB7:
 362:Generated_Source\PSoC5/UART_1.c ****     }
 363:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 12


 364:Generated_Source\PSoC5/UART_1.c **** 
 365:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART_1.c ****     *
 369:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 370:Generated_Source\PSoC5/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART_1.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART_1.c ****     *
 373:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART_1.c ****     *  None.
 375:Generated_Source\PSoC5/UART_1.c ****     *
 376:Generated_Source\PSoC5/UART_1.c ****     * Return:
 377:Generated_Source\PSoC5/UART_1.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART_1.c ****     *
 379:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART_1.c ****     *
 388:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART_1.c ****     *  No.
 390:Generated_Source\PSoC5/UART_1.c ****     *
 391:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART_1.c ****     {
 260              		.loc 1 393 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART_1.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART_1.c **** 
 396:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART_1.c **** 
 398:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART_1.c **** 
 401:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 403:Generated_Source\PSoC5/UART_1.c **** 
 404:Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 405:Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 406:Generated_Source\PSoC5/UART_1.c **** 
 407:Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART_1.c ****         {
 409:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART_1.c **** 
 412:Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART_1.c ****             {
 414:Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART_1.c ****             }
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 13


 416:Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART_1.c **** 
 419:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART_1.c ****             {
 421:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART_1.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART_1.c ****                             */
 430:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART_1.c ****                         }
 432:Generated_Source\PSoC5/UART_1.c ****                     #else
 433:Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:Generated_Source\PSoC5/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART_1.c ****             }
 437:Generated_Source\PSoC5/UART_1.c ****         }
 438:Generated_Source\PSoC5/UART_1.c ****         else
 439:Generated_Source\PSoC5/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 441:Generated_Source\PSoC5/UART_1.c ****         }
 442:Generated_Source\PSoC5/UART_1.c **** 
 443:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 444:Generated_Source\PSoC5/UART_1.c **** 
 445:Generated_Source\PSoC5/UART_1.c ****     #else
 446:Generated_Source\PSoC5/UART_1.c **** 
 447:Generated_Source\PSoC5/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART_1.c ****         rxData = UART_1_RXDATA_REG;
 265              		.loc 1 448 0
 266 0000 014B     		ldr	r3, .L23
 267 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 268              	.LVL8:
 449:Generated_Source\PSoC5/UART_1.c **** 
 450:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART_1.c **** 
 452:Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART_1.c ****     }
 269              		.loc 1 453 0
 270 0004 7047     		bx	lr
 271              	.L24:
 272 0006 00BF     		.align	2
 273              	.L23:
 274 0008 49640040 		.word	1073767497
 275              		.cfi_endproc
 276              	.LFE7:
 277              		.size	UART_1_ReadRxData, .-UART_1_ReadRxData
 278              		.section	.text.UART_1_ReadRxStatus,"ax",%progbits
 279              		.align	2
 280              		.global	UART_1_ReadRxStatus
 281              		.thumb
 282              		.thumb_func
 283              		.type	UART_1_ReadRxStatus, %function
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 14


 284              	UART_1_ReadRxStatus:
 285              	.LFB8:
 454:Generated_Source\PSoC5/UART_1.c **** 
 455:Generated_Source\PSoC5/UART_1.c **** 
 456:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART_1.c ****     *
 460:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 461:Generated_Source\PSoC5/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART_1.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART_1.c ****     *
 464:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART_1.c ****     *  None.
 466:Generated_Source\PSoC5/UART_1.c ****     *
 467:Generated_Source\PSoC5/UART_1.c ****     * Return:
 468:Generated_Source\PSoC5/UART_1.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART_1.c ****     *
 470:Generated_Source\PSoC5/UART_1.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART_1.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART_1.c ****     *  register read.
 475:Generated_Source\PSoC5/UART_1.c ****     *
 476:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART_1.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART_1.c ****     *   bits.
 483:Generated_Source\PSoC5/UART_1.c ****     *
 484:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART_1.c ****     {
 286              		.loc 1 486 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART_1.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART_1.c **** 
 489:Generated_Source\PSoC5/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 291              		.loc 1 489 0
 292 0000 024B     		ldr	r3, .L26
 293 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 294              	.LVL9:
 490:Generated_Source\PSoC5/UART_1.c **** 
 491:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART_1.c ****         {
 494:Generated_Source\PSoC5/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART_1.c ****         }
 497:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART_1.c **** 
 499:Generated_Source\PSoC5/UART_1.c ****         return(status);
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 15


 500:Generated_Source\PSoC5/UART_1.c ****     }
 295              		.loc 1 500 0
 296 0004 00F07F00 		and	r0, r0, #127
 297              	.LVL10:
 298 0008 7047     		bx	lr
 299              	.L27:
 300 000a 00BF     		.align	2
 301              	.L26:
 302 000c 69640040 		.word	1073767529
 303              		.cfi_endproc
 304              	.LFE8:
 305              		.size	UART_1_ReadRxStatus, .-UART_1_ReadRxStatus
 306              		.section	.text.UART_1_GetChar,"ax",%progbits
 307              		.align	2
 308              		.global	UART_1_GetChar
 309              		.thumb
 310              		.thumb_func
 311              		.type	UART_1_GetChar, %function
 312              	UART_1_GetChar:
 313              	.LFB9:
 501:Generated_Source\PSoC5/UART_1.c **** 
 502:Generated_Source\PSoC5/UART_1.c **** 
 503:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetChar
 505:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART_1.c ****     *
 507:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 508:Generated_Source\PSoC5/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:Generated_Source\PSoC5/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART_1.c ****     *
 512:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART_1.c ****     *  None.
 514:Generated_Source\PSoC5/UART_1.c ****     *
 515:Generated_Source\PSoC5/UART_1.c ****     * Return:
 516:Generated_Source\PSoC5/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART_1.c ****     *
 519:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART_1.c ****     *
 528:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART_1.c ****     *  No.
 530:Generated_Source\PSoC5/UART_1.c ****     *
 531:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:Generated_Source\PSoC5/UART_1.c ****     {
 314              		.loc 1 533 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 16


 318              		@ link register save eliminated.
 319              	.LVL11:
 534:Generated_Source\PSoC5/UART_1.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART_1.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART_1.c **** 
 537:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART_1.c **** 
 541:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 543:Generated_Source\PSoC5/UART_1.c **** 
 544:Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 545:Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 546:Generated_Source\PSoC5/UART_1.c **** 
 547:Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART_1.c ****         {
 549:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART_1.c ****             {
 553:Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART_1.c ****             }
 555:Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART_1.c **** 
 558:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART_1.c ****             {
 560:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART_1.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART_1.c ****                             */
 569:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART_1.c ****                         }
 571:Generated_Source\PSoC5/UART_1.c ****                     #else
 572:Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 574:Generated_Source\PSoC5/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART_1.c ****             }
 576:Generated_Source\PSoC5/UART_1.c **** 
 577:Generated_Source\PSoC5/UART_1.c ****         }
 578:Generated_Source\PSoC5/UART_1.c ****         else
 579:Generated_Source\PSoC5/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART_1.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 583:Generated_Source\PSoC5/UART_1.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART_1.c ****                 {
 587:Generated_Source\PSoC5/UART_1.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART_1.c ****                 }
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 17


 589:Generated_Source\PSoC5/UART_1.c ****             }
 590:Generated_Source\PSoC5/UART_1.c ****         }
 591:Generated_Source\PSoC5/UART_1.c **** 
 592:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 593:Generated_Source\PSoC5/UART_1.c **** 
 594:Generated_Source\PSoC5/UART_1.c ****     #else
 595:Generated_Source\PSoC5/UART_1.c **** 
 596:Generated_Source\PSoC5/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 320              		.loc 1 596 0
 321 0000 084B     		ldr	r3, .L32
 322 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 323 0004 DBB2     		uxtb	r3, r3
 324              	.LVL12:
 597:Generated_Source\PSoC5/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 325              		.loc 1 597 0
 326 0006 13F0200F 		tst	r3, #32
 327 000a 06D0     		beq	.L30
 598:Generated_Source\PSoC5/UART_1.c ****         {
 599:Generated_Source\PSoC5/UART_1.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 328              		.loc 1 600 0
 329 000c 064A     		ldr	r2, .L32+4
 330 000e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 331 0010 C0B2     		uxtb	r0, r0
 332              	.LVL13:
 601:Generated_Source\PSoC5/UART_1.c **** 
 602:Generated_Source\PSoC5/UART_1.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 333              		.loc 1 603 0
 334 0012 13F01E0F 		tst	r3, #30
 335 0016 02D1     		bne	.L31
 336 0018 7047     		bx	lr
 337              	.LVL14:
 338              	.L30:
 534:Generated_Source\PSoC5/UART_1.c ****         uint8 rxStatus;
 339              		.loc 1 534 0
 340 001a 0020     		movs	r0, #0
 341 001c 7047     		bx	lr
 342              	.LVL15:
 343              	.L31:
 604:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART_1.c ****             {
 606:Generated_Source\PSoC5/UART_1.c ****                 rxData = 0u;
 344              		.loc 1 606 0
 345 001e 0020     		movs	r0, #0
 346              	.LVL16:
 607:Generated_Source\PSoC5/UART_1.c ****             }
 608:Generated_Source\PSoC5/UART_1.c ****         }
 609:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART_1.c **** 
 611:Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART_1.c ****     }
 347              		.loc 1 612 0
 348 0020 7047     		bx	lr
 349              	.L33:
 350 0022 00BF     		.align	2
 351              	.L32:
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 18


 352 0024 69640040 		.word	1073767529
 353 0028 49640040 		.word	1073767497
 354              		.cfi_endproc
 355              	.LFE9:
 356              		.size	UART_1_GetChar, .-UART_1_GetChar
 357              		.section	.text.UART_1_GetByte,"ax",%progbits
 358              		.align	2
 359              		.global	UART_1_GetByte
 360              		.thumb
 361              		.thumb_func
 362              		.type	UART_1_GetByte, %function
 363              	UART_1_GetByte:
 364              	.LFB10:
 613:Generated_Source\PSoC5/UART_1.c **** 
 614:Generated_Source\PSoC5/UART_1.c **** 
 615:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetByte
 617:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART_1.c ****     *
 619:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 620:Generated_Source\PSoC5/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART_1.c ****     *  condition.
 622:Generated_Source\PSoC5/UART_1.c ****     *
 623:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART_1.c ****     *  None.
 625:Generated_Source\PSoC5/UART_1.c ****     *
 626:Generated_Source\PSoC5/UART_1.c ****     * Return:
 627:Generated_Source\PSoC5/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART_1.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART_1.c ****     *
 630:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART_1.c ****     *  No.
 632:Generated_Source\PSoC5/UART_1.c ****     *
 633:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:Generated_Source\PSoC5/UART_1.c ****     {
 365              		.loc 1 635 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369 0000 10B5     		push	{r4, lr}
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 4, -8
 372              		.cfi_offset 14, -4
 636:Generated_Source\PSoC5/UART_1.c ****         
 637:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART_1.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 641:Generated_Source\PSoC5/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
 642:Generated_Source\PSoC5/UART_1.c ****         UART_1_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 644:Generated_Source\PSoC5/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 645:Generated_Source\PSoC5/UART_1.c ****     #else
 646:Generated_Source\PSoC5/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 373              		.loc 1 646 0
 374 0002 FFF7FEFF 		bl	UART_1_ReadRxStatus
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 19


 375              	.LVL17:
 376 0006 0402     		lsls	r4, r0, #8
 377 0008 FFF7FEFF 		bl	UART_1_ReadRxData
 378              	.LVL18:
 379 000c 2043     		orrs	r0, r0, r4
 647:Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART_1.c ****         
 649:Generated_Source\PSoC5/UART_1.c ****     }
 380              		.loc 1 649 0
 381 000e 80B2     		uxth	r0, r0
 382 0010 10BD     		pop	{r4, pc}
 383              		.cfi_endproc
 384              	.LFE10:
 385              		.size	UART_1_GetByte, .-UART_1_GetByte
 386 0012 00BF     		.section	.text.UART_1_GetRxBufferSize,"ax",%progbits
 387              		.align	2
 388              		.global	UART_1_GetRxBufferSize
 389              		.thumb
 390              		.thumb_func
 391              		.type	UART_1_GetRxBufferSize, %function
 392              	UART_1_GetRxBufferSize:
 393              	.LFB11:
 650:Generated_Source\PSoC5/UART_1.c **** 
 651:Generated_Source\PSoC5/UART_1.c **** 
 652:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART_1.c ****     *
 656:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 657:Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART_1.c ****     *    account.
 663:Generated_Source\PSoC5/UART_1.c ****     *
 664:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART_1.c ****     *  None.
 666:Generated_Source\PSoC5/UART_1.c ****     *
 667:Generated_Source\PSoC5/UART_1.c ****     * Return:
 668:Generated_Source\PSoC5/UART_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART_1.c ****     *
 671:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART_1.c ****     *
 676:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART_1.c ****     *  No.
 678:Generated_Source\PSoC5/UART_1.c ****     *
 679:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 680:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART_1.c ****     *
 682:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART_1.c ****                                                             
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 20


 685:Generated_Source\PSoC5/UART_1.c ****     {
 394              		.loc 1 685 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART_1.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART_1.c **** 
 688:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART_1.c **** 
 690:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 692:Generated_Source\PSoC5/UART_1.c **** 
 693:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 694:Generated_Source\PSoC5/UART_1.c ****         {
 695:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART_1.c ****             {
 697:Generated_Source\PSoC5/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART_1.c ****             }
 699:Generated_Source\PSoC5/UART_1.c ****             else
 700:Generated_Source\PSoC5/UART_1.c ****             {
 701:Generated_Source\PSoC5/UART_1.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART_1.c ****             }
 703:Generated_Source\PSoC5/UART_1.c ****         }
 704:Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 705:Generated_Source\PSoC5/UART_1.c ****         {
 706:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 707:Generated_Source\PSoC5/UART_1.c ****         }
 708:Generated_Source\PSoC5/UART_1.c ****         else
 709:Generated_Source\PSoC5/UART_1.c ****         {
 710:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 711:Generated_Source\PSoC5/UART_1.c ****         }
 712:Generated_Source\PSoC5/UART_1.c **** 
 713:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 714:Generated_Source\PSoC5/UART_1.c **** 
 715:Generated_Source\PSoC5/UART_1.c ****     #else
 716:Generated_Source\PSoC5/UART_1.c **** 
 717:Generated_Source\PSoC5/UART_1.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 399              		.loc 1 718 0
 400 0000 044B     		ldr	r3, .L39
 401 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 402 0004 13F0200F 		tst	r3, #32
 403 0008 01D0     		beq	.L38
 404 000a 0120     		movs	r0, #1
 405 000c 7047     		bx	lr
 406              	.L38:
 407 000e 0020     		movs	r0, #0
 408              	.LVL19:
 719:Generated_Source\PSoC5/UART_1.c **** 
 720:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART_1.c **** 
 722:Generated_Source\PSoC5/UART_1.c ****         return(size);
 723:Generated_Source\PSoC5/UART_1.c ****     }
 409              		.loc 1 723 0
 410 0010 7047     		bx	lr
 411              	.L40:
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 21


 412 0012 00BF     		.align	2
 413              	.L39:
 414 0014 69640040 		.word	1073767529
 415              		.cfi_endproc
 416              	.LFE11:
 417              		.size	UART_1_GetRxBufferSize, .-UART_1_GetRxBufferSize
 418              		.section	.text.UART_1_ClearRxBuffer,"ax",%progbits
 419              		.align	2
 420              		.global	UART_1_ClearRxBuffer
 421              		.thumb
 422              		.thumb_func
 423              		.type	UART_1_ClearRxBuffer, %function
 424              	UART_1_ClearRxBuffer:
 425              	.LFB12:
 724:Generated_Source\PSoC5/UART_1.c **** 
 725:Generated_Source\PSoC5/UART_1.c **** 
 726:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART_1.c ****     *
 730:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 731:Generated_Source\PSoC5/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART_1.c ****     *
 733:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART_1.c ****     *  None.
 735:Generated_Source\PSoC5/UART_1.c ****     *
 736:Generated_Source\PSoC5/UART_1.c ****     * Return:
 737:Generated_Source\PSoC5/UART_1.c ****     *  None.
 738:Generated_Source\PSoC5/UART_1.c ****     *
 739:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART_1.c ****     *
 745:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART_1.c ****     *  No.
 747:Generated_Source\PSoC5/UART_1.c ****     *
 748:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 749:Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART_1.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART_1.c ****     *
 753:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART_1.c ****     *
 756:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART_1.c ****     {
 426              		.loc 1 758 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430 0000 08B5     		push	{r3, lr}
 431              		.cfi_def_cfa_offset 8
 432              		.cfi_offset 3, -8
 433              		.cfi_offset 14, -4
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 22


 759:Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART_1.c **** 
 761:Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 434              		.loc 1 762 0
 435 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 436              	.LVL20:
 763:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 437              		.loc 1 763 0
 438 0006 064B     		ldr	r3, .L43
 439 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 440 000a 42F00102 		orr	r2, r2, #1
 441 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 442              		.loc 1 764 0
 443 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 444 0012 02F0FE02 		and	r2, r2, #254
 445 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 446              		.loc 1 765 0
 447 0018 FFF7FEFF 		bl	CyExitCriticalSection
 448              	.LVL21:
 449 001c 08BD     		pop	{r3, pc}
 450              	.L44:
 451 001e 00BF     		.align	2
 452              	.L43:
 453 0020 99640040 		.word	1073767577
 454              		.cfi_endproc
 455              	.LFE12:
 456              		.size	UART_1_ClearRxBuffer, .-UART_1_ClearRxBuffer
 457              		.section	.text.UART_1_SetRxAddressMode,"ax",%progbits
 458              		.align	2
 459              		.global	UART_1_SetRxAddressMode
 460              		.thumb
 461              		.thumb_func
 462              		.type	UART_1_SetRxAddressMode, %function
 463              	UART_1_SetRxAddressMode:
 464              	.LFB13:
 766:Generated_Source\PSoC5/UART_1.c **** 
 767:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART_1.c **** 
 769:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 771:Generated_Source\PSoC5/UART_1.c **** 
 772:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART_1.c **** 
 777:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 778:Generated_Source\PSoC5/UART_1.c **** 
 779:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART_1.c **** 
 781:Generated_Source\PSoC5/UART_1.c ****     }
 782:Generated_Source\PSoC5/UART_1.c **** 
 783:Generated_Source\PSoC5/UART_1.c **** 
 784:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 23


 785:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 786:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART_1.c ****     *
 788:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 789:Generated_Source\PSoC5/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART_1.c ****     *  UART.
 791:Generated_Source\PSoC5/UART_1.c ****     *
 792:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART_1.c ****     *
 804:Generated_Source\PSoC5/UART_1.c ****     * Return:
 805:Generated_Source\PSoC5/UART_1.c ****     *  None.
 806:Generated_Source\PSoC5/UART_1.c ****     *
 807:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART_1.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART_1.c ****     *
 812:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART_1.c ****                                                         
 815:Generated_Source\PSoC5/UART_1.c ****     {
 465              		.loc 1 815 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469              		@ link register save eliminated.
 470              	.LVL22:
 471 0000 7047     		bx	lr
 472              		.cfi_endproc
 473              	.LFE13:
 474              		.size	UART_1_SetRxAddressMode, .-UART_1_SetRxAddressMode
 475 0002 00BF     		.section	.text.UART_1_SetRxAddress1,"ax",%progbits
 476              		.align	2
 477              		.global	UART_1_SetRxAddress1
 478              		.thumb
 479              		.thumb_func
 480              		.type	UART_1_SetRxAddress1, %function
 481              	UART_1_SetRxAddress1:
 482              	.LFB14:
 816:Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART_1.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART_1.c ****                 {
 820:Generated_Source\PSoC5/UART_1.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART_1.c ****                 }
 822:Generated_Source\PSoC5/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART_1.c ****                 uint8 tmpCtrl;
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 24


 824:Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART_1.c **** 
 828:Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART_1.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART_1.c ****             {
 837:Generated_Source\PSoC5/UART_1.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART_1.c ****             }
 839:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART_1.c ****     }
 841:Generated_Source\PSoC5/UART_1.c **** 
 842:Generated_Source\PSoC5/UART_1.c **** 
 843:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART_1.c ****     *
 847:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 848:Generated_Source\PSoC5/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART_1.c ****     *
 850:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART_1.c ****     *
 853:Generated_Source\PSoC5/UART_1.c ****     * Return:
 854:Generated_Source\PSoC5/UART_1.c ****     *  None.
 855:Generated_Source\PSoC5/UART_1.c ****     *
 856:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART_1.c ****     {
 483              		.loc 1 858 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              		@ link register save eliminated.
 488              	.LVL23:
 859:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 489              		.loc 1 859 0
 490 0000 014B     		ldr	r3, .L47
 491 0002 1870     		strb	r0, [r3]
 492 0004 7047     		bx	lr
 493              	.L48:
 494 0006 00BF     		.align	2
 495              	.L47:
 496 0008 29640040 		.word	1073767465
 497              		.cfi_endproc
 498              	.LFE14:
 499              		.size	UART_1_SetRxAddress1, .-UART_1_SetRxAddress1
 500              		.section	.text.UART_1_SetRxAddress2,"ax",%progbits
 501              		.align	2
 502              		.global	UART_1_SetRxAddress2
 503              		.thumb
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 25


 504              		.thumb_func
 505              		.type	UART_1_SetRxAddress2, %function
 506              	UART_1_SetRxAddress2:
 507              	.LFB15:
 860:Generated_Source\PSoC5/UART_1.c ****     }
 861:Generated_Source\PSoC5/UART_1.c **** 
 862:Generated_Source\PSoC5/UART_1.c **** 
 863:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART_1.c ****     *
 867:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 868:Generated_Source\PSoC5/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART_1.c ****     *
 870:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART_1.c ****     *
 873:Generated_Source\PSoC5/UART_1.c ****     * Return:
 874:Generated_Source\PSoC5/UART_1.c ****     *  None.
 875:Generated_Source\PSoC5/UART_1.c ****     *
 876:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART_1.c ****     {
 508              		.loc 1 878 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              		@ link register save eliminated.
 513              	.LVL24:
 879:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 514              		.loc 1 879 0
 515 0000 014B     		ldr	r3, .L50
 516 0002 1870     		strb	r0, [r3]
 517 0004 7047     		bx	lr
 518              	.L51:
 519 0006 00BF     		.align	2
 520              	.L50:
 521 0008 39640040 		.word	1073767481
 522              		.cfi_endproc
 523              	.LFE15:
 524              		.size	UART_1_SetRxAddress2, .-UART_1_SetRxAddress2
 525              		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 526              		.align	2
 527              		.global	UART_1_SetTxInterruptMode
 528              		.thumb
 529              		.thumb_func
 530              		.type	UART_1_SetTxInterruptMode, %function
 531              	UART_1_SetTxInterruptMode:
 532              	.LFB16:
 880:Generated_Source\PSoC5/UART_1.c ****     }
 881:Generated_Source\PSoC5/UART_1.c **** 
 882:Generated_Source\PSoC5/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART_1.c **** 
 884:Generated_Source\PSoC5/UART_1.c **** 
 885:Generated_Source\PSoC5/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 26


 888:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART_1.c ****     *
 890:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 891:Generated_Source\PSoC5/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART_1.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART_1.c ****     *
 894:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART_1.c ****     *
 901:Generated_Source\PSoC5/UART_1.c ****     * Return:
 902:Generated_Source\PSoC5/UART_1.c ****     *  None.
 903:Generated_Source\PSoC5/UART_1.c ****     *
 904:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 905:Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART_1.c ****     *
 907:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART_1.c ****     {
 533              		.loc 1 909 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538              	.LVL25:
 910:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 539              		.loc 1 910 0
 540 0000 014B     		ldr	r3, .L53
 541 0002 1870     		strb	r0, [r3]
 542 0004 7047     		bx	lr
 543              	.L54:
 544 0006 00BF     		.align	2
 545              	.L53:
 546 0008 8D640040 		.word	1073767565
 547              		.cfi_endproc
 548              	.LFE16:
 549              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 550              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 551              		.align	2
 552              		.global	UART_1_WriteTxData
 553              		.thumb
 554              		.thumb_func
 555              		.type	UART_1_WriteTxData, %function
 556              	UART_1_WriteTxData:
 557              	.LFB17:
 911:Generated_Source\PSoC5/UART_1.c ****     }
 912:Generated_Source\PSoC5/UART_1.c **** 
 913:Generated_Source\PSoC5/UART_1.c **** 
 914:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART_1.c ****     *
 918:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 919:Generated_Source\PSoC5/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 27


 920:Generated_Source\PSoC5/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART_1.c ****     *  separately.
 922:Generated_Source\PSoC5/UART_1.c ****     *
 923:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART_1.c ****     *
 926:Generated_Source\PSoC5/UART_1.c ****     * Return:
 927:Generated_Source\PSoC5/UART_1.c ****     * None.
 928:Generated_Source\PSoC5/UART_1.c ****     *
 929:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART_1.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART_1.c ****     *
 938:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART_1.c ****     *  No.
 940:Generated_Source\PSoC5/UART_1.c ****     *
 941:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART_1.c ****     {
 558              		.loc 1 943 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 563              	.LVL26:
 944:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 564              		.loc 1 945 0
 565 0000 024B     		ldr	r3, .L57
 566 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 567 0004 0BB1     		cbz	r3, .L55
 946:Generated_Source\PSoC5/UART_1.c ****         {
 947:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART_1.c **** 
 949:Generated_Source\PSoC5/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 951:Generated_Source\PSoC5/UART_1.c **** 
 952:Generated_Source\PSoC5/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART_1.c ****             {
 955:Generated_Source\PSoC5/UART_1.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART_1.c ****             }
 958:Generated_Source\PSoC5/UART_1.c ****             else
 959:Generated_Source\PSoC5/UART_1.c ****             {
 960:Generated_Source\PSoC5/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART_1.c ****                 {
 962:Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART_1.c ****                 }
 964:Generated_Source\PSoC5/UART_1.c **** 
 965:Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 28


 967:Generated_Source\PSoC5/UART_1.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBufferWrite++;
 969:Generated_Source\PSoC5/UART_1.c ****             }
 970:Generated_Source\PSoC5/UART_1.c **** 
 971:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 972:Generated_Source\PSoC5/UART_1.c **** 
 973:Generated_Source\PSoC5/UART_1.c ****         #else
 974:Generated_Source\PSoC5/UART_1.c **** 
 975:Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 568              		.loc 1 976 0
 569 0006 024B     		ldr	r3, .L57+4
 570 0008 1870     		strb	r0, [r3]
 571              	.L55:
 572 000a 7047     		bx	lr
 573              	.L58:
 574              		.align	2
 575              	.L57:
 576 000c 00000000 		.word	.LANCHOR0
 577 0010 4D640040 		.word	1073767501
 578              		.cfi_endproc
 579              	.LFE17:
 580              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 581              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 582              		.align	2
 583              		.global	UART_1_ReadTxStatus
 584              		.thumb
 585              		.thumb_func
 586              		.type	UART_1_ReadTxStatus, %function
 587              	UART_1_ReadTxStatus:
 588              	.LFB18:
 977:Generated_Source\PSoC5/UART_1.c **** 
 978:Generated_Source\PSoC5/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART_1.c ****         }
 980:Generated_Source\PSoC5/UART_1.c ****     }
 981:Generated_Source\PSoC5/UART_1.c **** 
 982:Generated_Source\PSoC5/UART_1.c **** 
 983:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART_1.c ****     *
 987:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 988:Generated_Source\PSoC5/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART_1.c ****     *
 990:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART_1.c ****     *  None.
 992:Generated_Source\PSoC5/UART_1.c ****     *
 993:Generated_Source\PSoC5/UART_1.c ****     * Return:
 994:Generated_Source\PSoC5/UART_1.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART_1.c ****     *
 996:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 997:Generated_Source\PSoC5/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART_1.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART_1.c ****     *
1002:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 29


1003:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART_1.c ****     {
 589              		.loc 1 1004 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 594              		.loc 1 1005 0
 595 0000 014B     		ldr	r3, .L60
 596 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART_1.c ****     }
 597              		.loc 1 1006 0
 598 0004 7047     		bx	lr
 599              	.L61:
 600 0006 00BF     		.align	2
 601              	.L60:
 602 0008 6D640040 		.word	1073767533
 603              		.cfi_endproc
 604              	.LFE18:
 605              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 606              		.section	.text.UART_1_PutChar,"ax",%progbits
 607              		.align	2
 608              		.global	UART_1_PutChar
 609              		.thumb
 610              		.thumb_func
 611              		.type	UART_1_PutChar, %function
 612              	UART_1_PutChar:
 613              	.LFB19:
1007:Generated_Source\PSoC5/UART_1.c **** 
1008:Generated_Source\PSoC5/UART_1.c **** 
1009:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutChar
1011:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART_1.c ****     *
1013:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1014:Generated_Source\PSoC5/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART_1.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART_1.c ****     *
1018:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART_1.c ****     *
1021:Generated_Source\PSoC5/UART_1.c ****     * Return:
1022:Generated_Source\PSoC5/UART_1.c ****     *  None.
1023:Generated_Source\PSoC5/UART_1.c ****     *
1024:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART_1.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART_1.c ****     *
1034:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 30


1035:Generated_Source\PSoC5/UART_1.c ****     *  No.
1036:Generated_Source\PSoC5/UART_1.c ****     *
1037:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1038:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART_1.c ****     *
1040:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART_1.c ****     {
 614              		.loc 1 1042 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 619              	.LVL27:
 620              	.L63:
1043:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART_1.c ****         */
1048:Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART_1.c **** 
1051:Generated_Source\PSoC5/UART_1.c ****         do
1052:Generated_Source\PSoC5/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART_1.c **** 
1054:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1057:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART_1.c **** 
1059:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
1060:Generated_Source\PSoC5/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
1061:Generated_Source\PSoC5/UART_1.c **** 
1062:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1065:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART_1.c ****         }
1067:Generated_Source\PSoC5/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART_1.c ****                                 (uint8)(UART_1_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART_1.c **** 
1071:Generated_Source\PSoC5/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART_1.c ****         {
1074:Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART_1.c ****         }
1077:Generated_Source\PSoC5/UART_1.c ****         else
1078:Generated_Source\PSoC5/UART_1.c ****         {
1079:Generated_Source\PSoC5/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART_1.c ****             {
1081:Generated_Source\PSoC5/UART_1.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART_1.c ****             }
1083:Generated_Source\PSoC5/UART_1.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 31


1085:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART_1.c **** 
1087:Generated_Source\PSoC5/UART_1.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1090:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART_1.c **** 
1092:Generated_Source\PSoC5/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART_1.c **** 
1094:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1096:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART_1.c **** 
1098:Generated_Source\PSoC5/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART_1.c ****             {
1100:Generated_Source\PSoC5/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART_1.c ****                 UART_1_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART_1.c ****             }
1103:Generated_Source\PSoC5/UART_1.c ****         }
1104:Generated_Source\PSoC5/UART_1.c **** 
1105:Generated_Source\PSoC5/UART_1.c ****     #else
1106:Generated_Source\PSoC5/UART_1.c **** 
1107:Generated_Source\PSoC5/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
 621              		.loc 1 1107 0 discriminator 1
 622 0000 034B     		ldr	r3, .L64
 623 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 624 0004 13F0040F 		tst	r3, #4
 625 0008 FAD1     		bne	.L63
1108:Generated_Source\PSoC5/UART_1.c ****         {
1109:Generated_Source\PSoC5/UART_1.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART_1.c ****         }
1111:Generated_Source\PSoC5/UART_1.c **** 
1112:Generated_Source\PSoC5/UART_1.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
 626              		.loc 1 1113 0
 627 000a 024B     		ldr	r3, .L64+4
 628 000c 1870     		strb	r0, [r3]
 629 000e 7047     		bx	lr
 630              	.L65:
 631              		.align	2
 632              	.L64:
 633 0010 6D640040 		.word	1073767533
 634 0014 4D640040 		.word	1073767501
 635              		.cfi_endproc
 636              	.LFE19:
 637              		.size	UART_1_PutChar, .-UART_1_PutChar
 638              		.section	.text.UART_1_PutString,"ax",%progbits
 639              		.align	2
 640              		.global	UART_1_PutString
 641              		.thumb
 642              		.thumb_func
 643              		.type	UART_1_PutString, %function
 644              	UART_1_PutString:
 645              	.LFB20:
1114:Generated_Source\PSoC5/UART_1.c **** 
1115:Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART_1.c ****     }
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 32


1117:Generated_Source\PSoC5/UART_1.c **** 
1118:Generated_Source\PSoC5/UART_1.c **** 
1119:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutString
1121:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART_1.c ****     *
1123:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1124:Generated_Source\PSoC5/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART_1.c ****     *
1126:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART_1.c ****     *
1129:Generated_Source\PSoC5/UART_1.c ****     * Return:
1130:Generated_Source\PSoC5/UART_1.c ****     *  None.
1131:Generated_Source\PSoC5/UART_1.c ****     *
1132:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART_1.c ****     *
1136:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART_1.c ****     *  No.
1138:Generated_Source\PSoC5/UART_1.c ****     *
1139:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1140:Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART_1.c ****     *
1144:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART_1.c ****     {
 646              		.loc 1 1146 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              	.LVL28:
 651 0000 38B5     		push	{r3, r4, r5, lr}
 652              		.cfi_def_cfa_offset 16
 653              		.cfi_offset 3, -16
 654              		.cfi_offset 4, -12
 655              		.cfi_offset 5, -8
 656              		.cfi_offset 14, -4
 657              	.LVL29:
1147:Generated_Source\PSoC5/UART_1.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART_1.c **** 
1149:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 658              		.loc 1 1150 0
 659 0002 074B     		ldr	r3, .L72
 660 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 661 0006 2BB9     		cbnz	r3, .L70
 662 0008 38BD     		pop	{r3, r4, r5, pc}
 663              	.LVL30:
 664              	.L69:
1151:Generated_Source\PSoC5/UART_1.c ****         {
1152:Generated_Source\PSoC5/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART_1.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC5/UART_1.c ****             {
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 33


1155:Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
 665              		.loc 1 1155 0
 666 000a FFF7FEFF 		bl	UART_1_PutChar
 667              	.LVL31:
1156:Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 668              		.loc 1 1156 0
 669 000e 0134     		adds	r4, r4, #1
 670              	.LVL32:
 671 0010 A4B2     		uxth	r4, r4
 672              	.LVL33:
 673 0012 01E0     		b	.L67
 674              	.LVL34:
 675              	.L70:
 676 0014 0546     		mov	r5, r0
 677 0016 0024     		movs	r4, #0
 678              	.LVL35:
 679              	.L67:
1153:Generated_Source\PSoC5/UART_1.c ****             {
 680              		.loc 1 1153 0
 681 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 682 001a 0028     		cmp	r0, #0
 683 001c F5D1     		bne	.L69
 684 001e 38BD     		pop	{r3, r4, r5, pc}
 685              	.LVL36:
 686              	.L73:
 687              		.align	2
 688              	.L72:
 689 0020 00000000 		.word	.LANCHOR0
 690              		.cfi_endproc
 691              	.LFE20:
 692              		.size	UART_1_PutString, .-UART_1_PutString
 693              		.section	.text.UART_1_PutArray,"ax",%progbits
 694              		.align	2
 695              		.global	UART_1_PutArray
 696              		.thumb
 697              		.thumb_func
 698              		.type	UART_1_PutArray, %function
 699              	UART_1_PutArray:
 700              	.LFB21:
1157:Generated_Source\PSoC5/UART_1.c ****             }
1158:Generated_Source\PSoC5/UART_1.c ****         }
1159:Generated_Source\PSoC5/UART_1.c ****     }
1160:Generated_Source\PSoC5/UART_1.c **** 
1161:Generated_Source\PSoC5/UART_1.c **** 
1162:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutArray
1164:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART_1.c ****     *
1166:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1167:Generated_Source\PSoC5/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART_1.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART_1.c ****     *
1170:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART_1.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 34


1175:Generated_Source\PSoC5/UART_1.c ****     * Return:
1176:Generated_Source\PSoC5/UART_1.c ****     *  None.
1177:Generated_Source\PSoC5/UART_1.c ****     *
1178:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART_1.c ****     *
1182:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART_1.c ****     *  No.
1184:Generated_Source\PSoC5/UART_1.c ****     *
1185:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1186:Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART_1.c ****     *
1190:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART_1.c ****                                                                     
1193:Generated_Source\PSoC5/UART_1.c ****     {
 701              		.loc 1 1193 0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 0
 704              		@ frame_needed = 0, uses_anonymous_args = 0
 705              	.LVL37:
1194:Generated_Source\PSoC5/UART_1.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART_1.c **** 
1196:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 706              		.loc 1 1197 0
 707 0000 084B     		ldr	r3, .L80
 708 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 709 0004 33B9     		cbnz	r3, .L78
 710 0006 7047     		bx	lr
 711              	.LVL38:
 712              	.L77:
 713              		.cfi_def_cfa_offset 16
 714              		.cfi_offset 4, -16
 715              		.cfi_offset 5, -12
 716              		.cfi_offset 6, -8
 717              		.cfi_offset 14, -4
1198:Generated_Source\PSoC5/UART_1.c ****         {
1199:Generated_Source\PSoC5/UART_1.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC5/UART_1.c ****             {
1201:Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 718              		.loc 1 1201 0
 719 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 720 000a FFF7FEFF 		bl	UART_1_PutChar
 721              	.LVL39:
1202:Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 722              		.loc 1 1202 0
 723 000e 0134     		adds	r4, r4, #1
 724              	.LVL40:
 725 0010 E4B2     		uxtb	r4, r4
 726              	.LVL41:
 727 0012 03E0     		b	.L75
 728              	.LVL42:
 729              	.L78:
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 35


 730              		.cfi_def_cfa_offset 0
 731              		.cfi_restore 4
 732              		.cfi_restore 5
 733              		.cfi_restore 6
 734              		.cfi_restore 14
1193:Generated_Source\PSoC5/UART_1.c ****         uint8 bufIndex = 0u;
 735              		.loc 1 1193 0
 736 0014 70B5     		push	{r4, r5, r6, lr}
 737              		.cfi_def_cfa_offset 16
 738              		.cfi_offset 4, -16
 739              		.cfi_offset 5, -12
 740              		.cfi_offset 6, -8
 741              		.cfi_offset 14, -4
 742 0016 0D46     		mov	r5, r1
 743 0018 0646     		mov	r6, r0
 744 001a 0024     		movs	r4, #0
 745              	.LVL43:
 746              	.L75:
1199:Generated_Source\PSoC5/UART_1.c ****             {
 747              		.loc 1 1199 0
 748 001c AC42     		cmp	r4, r5
 749 001e F3D3     		bcc	.L77
 750 0020 70BD     		pop	{r4, r5, r6, pc}
 751              	.LVL44:
 752              	.L81:
 753 0022 00BF     		.align	2
 754              	.L80:
 755 0024 00000000 		.word	.LANCHOR0
 756              		.cfi_endproc
 757              	.LFE21:
 758              		.size	UART_1_PutArray, .-UART_1_PutArray
 759              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 760              		.align	2
 761              		.global	UART_1_PutCRLF
 762              		.thumb
 763              		.thumb_func
 764              		.type	UART_1_PutCRLF, %function
 765              	UART_1_PutCRLF:
 766              	.LFB22:
1203:Generated_Source\PSoC5/UART_1.c ****             }
1204:Generated_Source\PSoC5/UART_1.c ****         }
1205:Generated_Source\PSoC5/UART_1.c ****     }
1206:Generated_Source\PSoC5/UART_1.c **** 
1207:Generated_Source\PSoC5/UART_1.c **** 
1208:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART_1.c ****     *
1212:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1213:Generated_Source\PSoC5/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART_1.c ****     *
1216:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART_1.c ****     *
1219:Generated_Source\PSoC5/UART_1.c ****     * Return:
1220:Generated_Source\PSoC5/UART_1.c ****     *  None.
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 36


1221:Generated_Source\PSoC5/UART_1.c ****     *
1222:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART_1.c ****     *
1226:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART_1.c ****     *  No.
1228:Generated_Source\PSoC5/UART_1.c ****     *
1229:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART_1.c ****     {
 767              		.loc 1 1231 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              	.LVL45:
 772 0000 08B5     		push	{r3, lr}
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 3, -8
 775              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 776              		.loc 1 1233 0
 777 0002 064B     		ldr	r3, .L85
 778 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 779 0006 3BB1     		cbz	r3, .L82
1234:Generated_Source\PSoC5/UART_1.c ****         {
1235:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(txDataByte);
 780              		.loc 1 1235 0
 781 0008 FFF7FEFF 		bl	UART_1_PutChar
 782              	.LVL46:
1236:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Du);
 783              		.loc 1 1236 0
 784 000c 0D20     		movs	r0, #13
 785 000e FFF7FEFF 		bl	UART_1_PutChar
 786              	.LVL47:
1237:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Au);
 787              		.loc 1 1237 0
 788 0012 0A20     		movs	r0, #10
 789 0014 FFF7FEFF 		bl	UART_1_PutChar
 790              	.LVL48:
 791              	.L82:
 792 0018 08BD     		pop	{r3, pc}
 793              	.L86:
 794 001a 00BF     		.align	2
 795              	.L85:
 796 001c 00000000 		.word	.LANCHOR0
 797              		.cfi_endproc
 798              	.LFE22:
 799              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 800              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 801              		.align	2
 802              		.global	UART_1_GetTxBufferSize
 803              		.thumb
 804              		.thumb_func
 805              		.type	UART_1_GetTxBufferSize, %function
 806              	UART_1_GetTxBufferSize:
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 37


 807              	.LFB23:
1238:Generated_Source\PSoC5/UART_1.c ****         }
1239:Generated_Source\PSoC5/UART_1.c ****     }
1240:Generated_Source\PSoC5/UART_1.c **** 
1241:Generated_Source\PSoC5/UART_1.c **** 
1242:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART_1.c ****     *
1246:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1247:Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART_1.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART_1.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART_1.c ****     *
1255:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART_1.c ****     *  None.
1257:Generated_Source\PSoC5/UART_1.c ****     *
1258:Generated_Source\PSoC5/UART_1.c ****     * Return:
1259:Generated_Source\PSoC5/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART_1.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART_1.c ****     *
1262:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART_1.c ****     *
1266:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART_1.c ****     *  No.
1268:Generated_Source\PSoC5/UART_1.c ****     *
1269:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1270:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART_1.c ****     *
1272:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART_1.c ****                                                             
1275:Generated_Source\PSoC5/UART_1.c ****     {
 808              		.loc 1 1275 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART_1.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART_1.c **** 
1278:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART_1.c **** 
1280:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
1282:Generated_Source\PSoC5/UART_1.c **** 
1283:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
1284:Generated_Source\PSoC5/UART_1.c ****         {
1285:Generated_Source\PSoC5/UART_1.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART_1.c ****         }
1287:Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
1288:Generated_Source\PSoC5/UART_1.c ****         {
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 38


1289:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
1290:Generated_Source\PSoC5/UART_1.c ****         }
1291:Generated_Source\PSoC5/UART_1.c ****         else
1292:Generated_Source\PSoC5/UART_1.c ****         {
1293:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
1294:Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite;
1295:Generated_Source\PSoC5/UART_1.c ****         }
1296:Generated_Source\PSoC5/UART_1.c **** 
1297:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
1298:Generated_Source\PSoC5/UART_1.c **** 
1299:Generated_Source\PSoC5/UART_1.c ****     #else
1300:Generated_Source\PSoC5/UART_1.c **** 
1301:Generated_Source\PSoC5/UART_1.c ****         size = UART_1_TXSTATUS_REG;
 813              		.loc 1 1301 0
 814 0000 074B     		ldr	r3, .L91
 815 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 816 0004 DBB2     		uxtb	r3, r3
 817              	.LVL49:
1302:Generated_Source\PSoC5/UART_1.c **** 
1303:Generated_Source\PSoC5/UART_1.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
 818              		.loc 1 1304 0
 819 0006 13F0040F 		tst	r3, #4
 820 000a 04D1     		bne	.L89
1305:Generated_Source\PSoC5/UART_1.c ****         {
1306:Generated_Source\PSoC5/UART_1.c ****             size = UART_1_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART_1.c ****         }
1308:Generated_Source\PSoC5/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
 821              		.loc 1 1308 0
 822 000c 13F0020F 		tst	r3, #2
 823 0010 03D0     		beq	.L90
1309:Generated_Source\PSoC5/UART_1.c ****         {
1310:Generated_Source\PSoC5/UART_1.c ****             size = 0u;
 824              		.loc 1 1310 0
 825 0012 0020     		movs	r0, #0
 826 0014 7047     		bx	lr
 827              	.L89:
1306:Generated_Source\PSoC5/UART_1.c ****         }
 828              		.loc 1 1306 0
 829 0016 0420     		movs	r0, #4
 830 0018 7047     		bx	lr
 831              	.L90:
1311:Generated_Source\PSoC5/UART_1.c ****         }
1312:Generated_Source\PSoC5/UART_1.c ****         else
1313:Generated_Source\PSoC5/UART_1.c ****         {
1314:Generated_Source\PSoC5/UART_1.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART_1.c ****             size = 1u;
 832              		.loc 1 1315 0
 833 001a 0120     		movs	r0, #1
 834              	.LVL50:
1316:Generated_Source\PSoC5/UART_1.c ****         }
1317:Generated_Source\PSoC5/UART_1.c **** 
1318:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART_1.c **** 
1320:Generated_Source\PSoC5/UART_1.c ****     return(size);
1321:Generated_Source\PSoC5/UART_1.c ****     }
 835              		.loc 1 1321 0
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 39


 836 001c 7047     		bx	lr
 837              	.L92:
 838 001e 00BF     		.align	2
 839              	.L91:
 840 0020 6D640040 		.word	1073767533
 841              		.cfi_endproc
 842              	.LFE23:
 843              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 844              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 845              		.align	2
 846              		.global	UART_1_ClearTxBuffer
 847              		.thumb
 848              		.thumb_func
 849              		.type	UART_1_ClearTxBuffer, %function
 850              	UART_1_ClearTxBuffer:
 851              	.LFB24:
1322:Generated_Source\PSoC5/UART_1.c **** 
1323:Generated_Source\PSoC5/UART_1.c **** 
1324:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART_1.c ****     *
1328:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1329:Generated_Source\PSoC5/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART_1.c ****     *
1331:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART_1.c ****     *  None.
1333:Generated_Source\PSoC5/UART_1.c ****     *
1334:Generated_Source\PSoC5/UART_1.c ****     * Return:
1335:Generated_Source\PSoC5/UART_1.c ****     *  None.
1336:Generated_Source\PSoC5/UART_1.c ****     *
1337:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART_1.c ****     *
1341:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART_1.c ****     *  No.
1343:Generated_Source\PSoC5/UART_1.c ****     *
1344:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1345:Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART_1.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART_1.c ****     *
1349:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART_1.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART_1.c ****     *
1353:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART_1.c ****     {
 852              		.loc 1 1355 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856 0000 08B5     		push	{r3, lr}
 857              		.cfi_def_cfa_offset 8
 858              		.cfi_offset 3, -8
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 40


 859              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART_1.c **** 
1358:Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 860              		.loc 1 1358 0
 861 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 862              	.LVL51:
1359:Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 863              		.loc 1 1360 0
 864 0006 064B     		ldr	r3, .L95
 865 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 866 000a 42F00102 		orr	r2, r2, #1
 867 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 868              		.loc 1 1361 0
 869 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 870 0012 02F0FE02 		and	r2, r2, #254
 871 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 872              		.loc 1 1362 0
 873 0018 FFF7FEFF 		bl	CyExitCriticalSection
 874              	.LVL52:
 875 001c 08BD     		pop	{r3, pc}
 876              	.L96:
 877 001e 00BF     		.align	2
 878              	.L95:
 879 0020 9D640040 		.word	1073767581
 880              		.cfi_endproc
 881              	.LFE24:
 882              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 883              		.section	.text.UART_1_SendBreak,"ax",%progbits
 884              		.align	2
 885              		.global	UART_1_SendBreak
 886              		.thumb
 887              		.thumb_func
 888              		.type	UART_1_SendBreak, %function
 889              	UART_1_SendBreak:
 890              	.LFB25:
1363:Generated_Source\PSoC5/UART_1.c **** 
1364:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART_1.c **** 
1366:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
1368:Generated_Source\PSoC5/UART_1.c **** 
1369:Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferRead = 0u;
1370:Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART_1.c **** 
1372:Generated_Source\PSoC5/UART_1.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
1374:Generated_Source\PSoC5/UART_1.c **** 
1375:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART_1.c ****     }
1377:Generated_Source\PSoC5/UART_1.c **** 
1378:Generated_Source\PSoC5/UART_1.c **** 
1379:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SendBreak
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 41


1381:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART_1.c ****     *
1383:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1384:Generated_Source\PSoC5/UART_1.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART_1.c ****     *
1386:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART_1.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART_1.c ****     *       then return.
1394:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART_1.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART_1.c ****     *
1398:Generated_Source\PSoC5/UART_1.c ****     * Return:
1399:Generated_Source\PSoC5/UART_1.c ****     *  None.
1400:Generated_Source\PSoC5/UART_1.c ****     *
1401:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART_1.c ****     *
1406:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART_1.c ****     *  No.
1408:Generated_Source\PSoC5/UART_1.c ****     *
1409:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1410:Generated_Source\PSoC5/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART_1.c ****     *  operation.
1413:Generated_Source\PSoC5/UART_1.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART_1.c ****     *     complete.
1417:Generated_Source\PSoC5/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART_1.c ****     *     operation
1419:Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART_1.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART_1.c ****     *
1432:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART_1.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART_1.c ****     *  communication can continue.
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 42


1438:Generated_Source\PSoC5/UART_1.c ****     *
1439:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART_1.c ****     {
 891              		.loc 1 1441 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895              		@ link register save eliminated.
 896              	.LVL53:
1442:Generated_Source\PSoC5/UART_1.c **** 
1443:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 897              		.loc 1 1444 0
 898 0000 124B     		ldr	r3, .L104
 899 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 900 0004 0BB3     		cbz	r3, .L97
 901              	.LBB2:
1445:Generated_Source\PSoC5/UART_1.c ****         {
1446:Generated_Source\PSoC5/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART_1.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART_1.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART_1.c **** 
1450:Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART_1.c **** 
1452:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART_1.c ****             {
1455:Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART_1.c **** 
1461:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART_1.c ****                 {
1463:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART_1.c ****                 }
1465:Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART_1.c ****             }
1467:Generated_Source\PSoC5/UART_1.c **** 
1468:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART_1.c ****             {
1471:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART_1.c ****                 {
1473:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART_1.c ****                 }
1475:Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART_1.c ****             }
1477:Generated_Source\PSoC5/UART_1.c **** 
1478:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1480:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART_1.c ****             {
1482:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 43


1484:Generated_Source\PSoC5/UART_1.c ****             }
1485:Generated_Source\PSoC5/UART_1.c **** 
1486:Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART_1.c **** 
1488:Generated_Source\PSoC5/UART_1.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART_1.c **** 
1490:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 902              		.loc 1 1490 0
 903 0006 08B1     		cbz	r0, .L99
 904              		.loc 1 1490 0 is_stmt 0 discriminator 1
 905 0008 0328     		cmp	r0, #3
 906 000a 0DD1     		bne	.L100
 907              	.L99:
1491:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART_1.c ****             {
1493:Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART_1.c **** 
1500:Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
 908              		.loc 1 1501 0 is_stmt 1
 909 000c 104B     		ldr	r3, .L104+4
 910 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 911 0010 0E4A     		ldr	r2, .L104
 912 0012 5170     		strb	r1, [r2, #1]
1502:Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
 913              		.loc 1 1502 0
 914 0014 6722     		movs	r2, #103
 915 0016 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART_1.c ****                 #else
1504:Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART_1.c **** 
1508:Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
 916              		.loc 1 1509 0
 917 0018 0022     		movs	r2, #0
 918 001a 1133     		adds	r3, r3, #17
 919 001c 1A70     		strb	r2, [r3]
 920              	.L101:
1510:Generated_Source\PSoC5/UART_1.c **** 
1511:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART_1.c ****                 {
1513:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 921              		.loc 1 1513 0 discriminator 1
 922 001e 0D4B     		ldr	r3, .L104+8
 923 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 924              	.LVL54:
1514:Generated_Source\PSoC5/UART_1.c ****                 }
1515:Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 925              		.loc 1 1515 0 discriminator 1
 926 0022 13F0020F 		tst	r3, #2
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 44


 927 0026 FAD1     		bne	.L101
 928              	.LVL55:
 929              	.L100:
1516:Generated_Source\PSoC5/UART_1.c ****             }
1517:Generated_Source\PSoC5/UART_1.c **** 
1518:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 930              		.loc 1 1518 0
 931 0028 0128     		cmp	r0, #1
 932 002a 01D0     		beq	.L102
 933              		.loc 1 1518 0 is_stmt 0 discriminator 1
 934 002c 0328     		cmp	r0, #3
 935 002e 04D1     		bne	.L103
 936              	.L102:
1519:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART_1.c ****             {
1521:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART_1.c ****                 {
1523:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 937              		.loc 1 1523 0 is_stmt 1 discriminator 1
 938 0030 084B     		ldr	r3, .L104+8
 939 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 940              	.LVL56:
1524:Generated_Source\PSoC5/UART_1.c ****                 }
1525:Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
 941              		.loc 1 1525 0 discriminator 1
 942 0034 13F0010F 		tst	r3, #1
 943 0038 FAD0     		beq	.L102
 944              	.LVL57:
 945              	.L103:
1526:Generated_Source\PSoC5/UART_1.c ****             }
1527:Generated_Source\PSoC5/UART_1.c **** 
1528:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 946              		.loc 1 1529 0
 947 003a 0138     		subs	r0, r0, #1
 948              	.LVL58:
 949 003c C0B2     		uxtb	r0, r0
1528:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 950              		.loc 1 1528 0
 951 003e 0228     		cmp	r0, #2
 952 0040 03D8     		bhi	.L97
1530:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART_1.c ****             {
1532:Generated_Source\PSoC5/UART_1.c **** 
1533:Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
 953              		.loc 1 1534 0
 954 0042 024B     		ldr	r3, .L104
 955 0044 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 956 0046 024B     		ldr	r3, .L104+4
 957 0048 1A70     		strb	r2, [r3]
 958              	.L97:
 959 004a 7047     		bx	lr
 960              	.L105:
 961              		.align	2
 962              	.L104:
 963 004c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 45


 964 0050 3C640040 		.word	1073767484
 965 0054 6D640040 		.word	1073767533
 966              	.LBE2:
 967              		.cfi_endproc
 968              	.LFE25:
 969              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 970              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 971              		.align	2
 972              		.global	UART_1_SetTxAddressMode
 973              		.thumb
 974              		.thumb_func
 975              		.type	UART_1_SetTxAddressMode, %function
 976              	UART_1_SetTxAddressMode:
 977              	.LFB26:
1535:Generated_Source\PSoC5/UART_1.c ****             #else
1536:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART_1.c **** 
1539:Generated_Source\PSoC5/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART_1.c ****             }
1545:Generated_Source\PSoC5/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:Generated_Source\PSoC5/UART_1.c ****         }
1547:Generated_Source\PSoC5/UART_1.c ****     }
1548:Generated_Source\PSoC5/UART_1.c **** 
1549:Generated_Source\PSoC5/UART_1.c **** 
1550:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1552:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART_1.c ****     *
1554:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1555:Generated_Source\PSoC5/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART_1.c ****     *
1557:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART_1.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART_1.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART_1.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART_1.c ****     *
1564:Generated_Source\PSoC5/UART_1.c ****     * Return:
1565:Generated_Source\PSoC5/UART_1.c ****     *  None.
1566:Generated_Source\PSoC5/UART_1.c ****     *
1567:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART_1.c ****     *  register.
1570:Generated_Source\PSoC5/UART_1.c ****     *
1571:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART_1.c ****     {
 978              		.loc 1 1573 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 46


 982              		@ link register save eliminated.
 983              	.LVL59:
 984 0000 7047     		bx	lr
 985              		.cfi_endproc
 986              	.LFE26:
 987              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 988              		.global	UART_1_initVar
 989 0002 00BF     		.bss
 990              		.set	.LANCHOR0,. + 0
 991              		.type	UART_1_initVar, %object
 992              		.size	UART_1_initVar, 1
 993              	UART_1_initVar:
 994 0000 00       		.space	1
 995              		.type	txPeriod.5099, %object
 996              		.size	txPeriod.5099, 1
 997              	txPeriod.5099:
 998 0001 00       		.space	1
 999              		.text
 1000              	.Letext0:
 1001              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1002              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1003              		.section	.debug_info,"",%progbits
 1004              	.Ldebug_info0:
 1005 0000 D2050000 		.4byte	0x5d2
 1006 0004 0400     		.2byte	0x4
 1007 0006 00000000 		.4byte	.Ldebug_abbrev0
 1008 000a 04       		.byte	0x4
 1009 000b 01       		.uleb128 0x1
 1010 000c 96030000 		.4byte	.LASF62
 1011 0010 0C       		.byte	0xc
 1012 0011 00000000 		.4byte	.LASF63
 1013 0015 BC000000 		.4byte	.LASF64
 1014 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1015 001d 00000000 		.4byte	0
 1016 0021 00000000 		.4byte	.Ldebug_line0
 1017 0025 02       		.uleb128 0x2
 1018 0026 01       		.byte	0x1
 1019 0027 06       		.byte	0x6
 1020 0028 49010000 		.4byte	.LASF0
 1021 002c 02       		.uleb128 0x2
 1022 002d 01       		.byte	0x1
 1023 002e 08       		.byte	0x8
 1024 002f 62030000 		.4byte	.LASF1
 1025 0033 02       		.uleb128 0x2
 1026 0034 02       		.byte	0x2
 1027 0035 05       		.byte	0x5
 1028 0036 70030000 		.4byte	.LASF2
 1029 003a 02       		.uleb128 0x2
 1030 003b 02       		.byte	0x2
 1031 003c 07       		.byte	0x7
 1032 003d 15020000 		.4byte	.LASF3
 1033 0041 02       		.uleb128 0x2
 1034 0042 04       		.byte	0x4
 1035 0043 05       		.byte	0x5
 1036 0044 6D010000 		.4byte	.LASF4
 1037 0048 02       		.uleb128 0x2
 1038 0049 04       		.byte	0x4
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 47


 1039 004a 07       		.byte	0x7
 1040 004b E7010000 		.4byte	.LASF5
 1041 004f 02       		.uleb128 0x2
 1042 0050 08       		.byte	0x8
 1043 0051 05       		.byte	0x5
 1044 0052 3B010000 		.4byte	.LASF6
 1045 0056 02       		.uleb128 0x2
 1046 0057 08       		.byte	0x8
 1047 0058 07       		.byte	0x7
 1048 0059 A5000000 		.4byte	.LASF7
 1049 005d 03       		.uleb128 0x3
 1050 005e 04       		.byte	0x4
 1051 005f 05       		.byte	0x5
 1052 0060 696E7400 		.ascii	"int\000"
 1053 0064 02       		.uleb128 0x2
 1054 0065 04       		.byte	0x4
 1055 0066 07       		.byte	0x7
 1056 0067 C6010000 		.4byte	.LASF8
 1057 006b 04       		.uleb128 0x4
 1058 006c 83010000 		.4byte	.LASF9
 1059 0070 02       		.byte	0x2
 1060 0071 E401     		.2byte	0x1e4
 1061 0073 2C000000 		.4byte	0x2c
 1062 0077 04       		.uleb128 0x4
 1063 0078 20000000 		.4byte	.LASF10
 1064 007c 02       		.byte	0x2
 1065 007d E501     		.2byte	0x1e5
 1066 007f 3A000000 		.4byte	0x3a
 1067 0083 02       		.uleb128 0x2
 1068 0084 04       		.byte	0x4
 1069 0085 04       		.byte	0x4
 1070 0086 19030000 		.4byte	.LASF11
 1071 008a 02       		.uleb128 0x2
 1072 008b 08       		.byte	0x8
 1073 008c 04       		.byte	0x4
 1074 008d 89010000 		.4byte	.LASF12
 1075 0091 04       		.uleb128 0x4
 1076 0092 51040000 		.4byte	.LASF13
 1077 0096 02       		.byte	0x2
 1078 0097 F501     		.2byte	0x1f5
 1079 0099 9D000000 		.4byte	0x9d
 1080 009d 02       		.uleb128 0x2
 1081 009e 01       		.byte	0x1
 1082 009f 08       		.byte	0x8
 1083 00a0 4C040000 		.4byte	.LASF14
 1084 00a4 04       		.uleb128 0x4
 1085 00a5 5D030000 		.4byte	.LASF15
 1086 00a9 02       		.byte	0x2
 1087 00aa 8E02     		.2byte	0x28e
 1088 00ac B0000000 		.4byte	0xb0
 1089 00b0 05       		.uleb128 0x5
 1090 00b1 6B000000 		.4byte	0x6b
 1091 00b5 02       		.uleb128 0x2
 1092 00b6 08       		.byte	0x8
 1093 00b7 04       		.byte	0x4
 1094 00b8 E2020000 		.4byte	.LASF16
 1095 00bc 02       		.uleb128 0x2
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 48


 1096 00bd 04       		.byte	0x4
 1097 00be 07       		.byte	0x7
 1098 00bf AF020000 		.4byte	.LASF17
 1099 00c3 06       		.uleb128 0x6
 1100 00c4 57040000 		.4byte	.LASF65
 1101 00c8 01       		.byte	0x1
 1102 00c9 6A       		.byte	0x6a
 1103 00ca 00000000 		.4byte	.LFB1
 1104 00ce 24000000 		.4byte	.LFE1-.LFB1
 1105 00d2 01       		.uleb128 0x1
 1106 00d3 9C       		.byte	0x9c
 1107 00d4 07       		.uleb128 0x7
 1108 00d5 28020000 		.4byte	.LASF18
 1109 00d9 01       		.byte	0x1
 1110 00da B7       		.byte	0xb7
 1111 00db 00000000 		.4byte	.LFB2
 1112 00df 30000000 		.4byte	.LFE2-.LFB2
 1113 00e3 01       		.uleb128 0x1
 1114 00e4 9C       		.byte	0x9c
 1115 00e5 0B010000 		.4byte	0x10b
 1116 00e9 08       		.uleb128 0x8
 1117 00ea 63040000 		.4byte	.LASF21
 1118 00ee 01       		.byte	0x1
 1119 00ef B9       		.byte	0xb9
 1120 00f0 6B000000 		.4byte	0x6b
 1121 00f4 00000000 		.4byte	.LLST0
 1122 00f8 09       		.uleb128 0x9
 1123 00f9 06000000 		.4byte	.LVL0
 1124 00fd BF050000 		.4byte	0x5bf
 1125 0101 09       		.uleb128 0x9
 1126 0102 28000000 		.4byte	.LVL1
 1127 0106 CA050000 		.4byte	0x5ca
 1128 010a 00       		.byte	0
 1129 010b 07       		.uleb128 0x7
 1130 010c 76010000 		.4byte	.LASF19
 1131 0110 01       		.byte	0x1
 1132 0111 4C       		.byte	0x4c
 1133 0112 00000000 		.4byte	.LFB0
 1134 0116 1C000000 		.4byte	.LFE0-.LFB0
 1135 011a 01       		.uleb128 0x1
 1136 011b 9C       		.byte	0x9c
 1137 011c 33010000 		.4byte	0x133
 1138 0120 09       		.uleb128 0x9
 1139 0121 0C000000 		.4byte	.LVL2
 1140 0125 C3000000 		.4byte	0xc3
 1141 0129 09       		.uleb128 0x9
 1142 012a 16000000 		.4byte	.LVL3
 1143 012e D4000000 		.4byte	0xd4
 1144 0132 00       		.byte	0
 1145 0133 07       		.uleb128 0x7
 1146 0134 79020000 		.4byte	.LASF20
 1147 0138 01       		.byte	0x1
 1148 0139 F0       		.byte	0xf0
 1149 013a 00000000 		.4byte	.LFB3
 1150 013e 30000000 		.4byte	.LFE3-.LFB3
 1151 0142 01       		.uleb128 0x1
 1152 0143 9C       		.byte	0x9c
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 49


 1153 0144 6A010000 		.4byte	0x16a
 1154 0148 08       		.uleb128 0x8
 1155 0149 63040000 		.4byte	.LASF21
 1156 014d 01       		.byte	0x1
 1157 014e F2       		.byte	0xf2
 1158 014f 6B000000 		.4byte	0x6b
 1159 0153 13000000 		.4byte	.LLST1
 1160 0157 09       		.uleb128 0x9
 1161 0158 06000000 		.4byte	.LVL4
 1162 015c BF050000 		.4byte	0x5bf
 1163 0160 09       		.uleb128 0x9
 1164 0161 28000000 		.4byte	.LVL5
 1165 0165 CA050000 		.4byte	0x5ca
 1166 0169 00       		.byte	0
 1167 016a 0A       		.uleb128 0xa
 1168 016b 5E020000 		.4byte	.LASF44
 1169 016f 01       		.byte	0x1
 1170 0170 2701     		.2byte	0x127
 1171 0172 6B000000 		.4byte	0x6b
 1172 0176 00000000 		.4byte	.LFB4
 1173 017a 04000000 		.4byte	.LFE4-.LFB4
 1174 017e 01       		.uleb128 0x1
 1175 017f 9C       		.byte	0x9c
 1176 0180 0B       		.uleb128 0xb
 1177 0181 7A030000 		.4byte	.LASF22
 1178 0185 01       		.byte	0x1
 1179 0186 3F01     		.2byte	0x13f
 1180 0188 00000000 		.4byte	.LFB5
 1181 018c 02000000 		.4byte	.LFE5-.LFB5
 1182 0190 01       		.uleb128 0x1
 1183 0191 9C       		.byte	0x9c
 1184 0192 A5010000 		.4byte	0x1a5
 1185 0196 0C       		.uleb128 0xc
 1186 0197 9C010000 		.4byte	.LASF24
 1187 019b 01       		.byte	0x1
 1188 019c 3F01     		.2byte	0x13f
 1189 019e 6B000000 		.4byte	0x6b
 1190 01a2 01       		.uleb128 0x1
 1191 01a3 50       		.byte	0x50
 1192 01a4 00       		.byte	0
 1193 01a5 0B       		.uleb128 0xb
 1194 01a6 A4010000 		.4byte	.LASF23
 1195 01aa 01       		.byte	0x1
 1196 01ab 6701     		.2byte	0x167
 1197 01ad 00000000 		.4byte	.LFB6
 1198 01b1 0C000000 		.4byte	.LFE6-.LFB6
 1199 01b5 01       		.uleb128 0x1
 1200 01b6 9C       		.byte	0x9c
 1201 01b7 CA010000 		.4byte	0x1ca
 1202 01bb 0C       		.uleb128 0xc
 1203 01bc 57020000 		.4byte	.LASF25
 1204 01c0 01       		.byte	0x1
 1205 01c1 6701     		.2byte	0x167
 1206 01c3 6B000000 		.4byte	0x6b
 1207 01c7 01       		.uleb128 0x1
 1208 01c8 50       		.byte	0x50
 1209 01c9 00       		.byte	0
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 50


 1210 01ca 0D       		.uleb128 0xd
 1211 01cb 93000000 		.4byte	.LASF27
 1212 01cf 01       		.byte	0x1
 1213 01d0 8801     		.2byte	0x188
 1214 01d2 6B000000 		.4byte	0x6b
 1215 01d6 00000000 		.4byte	.LFB7
 1216 01da 0C000000 		.4byte	.LFE7-.LFB7
 1217 01de 01       		.uleb128 0x1
 1218 01df 9C       		.byte	0x9c
 1219 01e0 F3010000 		.4byte	0x1f3
 1220 01e4 0E       		.uleb128 0xe
 1221 01e5 45040000 		.4byte	.LASF26
 1222 01e9 01       		.byte	0x1
 1223 01ea 8A01     		.2byte	0x18a
 1224 01ec 6B000000 		.4byte	0x6b
 1225 01f0 01       		.uleb128 0x1
 1226 01f1 50       		.byte	0x50
 1227 01f2 00       		.byte	0
 1228 01f3 0D       		.uleb128 0xd
 1229 01f4 7B040000 		.4byte	.LASF28
 1230 01f8 01       		.byte	0x1
 1231 01f9 E501     		.2byte	0x1e5
 1232 01fb 6B000000 		.4byte	0x6b
 1233 01ff 00000000 		.4byte	.LFB8
 1234 0203 10000000 		.4byte	.LFE8-.LFB8
 1235 0207 01       		.uleb128 0x1
 1236 0208 9C       		.byte	0x9c
 1237 0209 1E020000 		.4byte	0x21e
 1238 020d 0F       		.uleb128 0xf
 1239 020e 74040000 		.4byte	.LASF29
 1240 0212 01       		.byte	0x1
 1241 0213 E701     		.2byte	0x1e7
 1242 0215 6B000000 		.4byte	0x6b
 1243 0219 26000000 		.4byte	.LLST2
 1244 021d 00       		.byte	0
 1245 021e 0D       		.uleb128 0xd
 1246 021f 8F040000 		.4byte	.LASF30
 1247 0223 01       		.byte	0x1
 1248 0224 1402     		.2byte	0x214
 1249 0226 6B000000 		.4byte	0x6b
 1250 022a 00000000 		.4byte	.LFB9
 1251 022e 2C000000 		.4byte	.LFE9-.LFB9
 1252 0232 01       		.uleb128 0x1
 1253 0233 9C       		.byte	0x9c
 1254 0234 57020000 		.4byte	0x257
 1255 0238 0F       		.uleb128 0xf
 1256 0239 45040000 		.4byte	.LASF26
 1257 023d 01       		.byte	0x1
 1258 023e 1602     		.2byte	0x216
 1259 0240 6B000000 		.4byte	0x6b
 1260 0244 3E000000 		.4byte	.LLST3
 1261 0248 0E       		.uleb128 0xe
 1262 0249 F6020000 		.4byte	.LASF31
 1263 024d 01       		.byte	0x1
 1264 024e 1702     		.2byte	0x217
 1265 0250 6B000000 		.4byte	0x6b
 1266 0254 01       		.uleb128 0x1
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 51


 1267 0255 53       		.byte	0x53
 1268 0256 00       		.byte	0
 1269 0257 0D       		.uleb128 0xd
 1270 0258 85020000 		.4byte	.LASF32
 1271 025c 01       		.byte	0x1
 1272 025d 7A02     		.2byte	0x27a
 1273 025f 77000000 		.4byte	0x77
 1274 0263 00000000 		.4byte	.LFB10
 1275 0267 12000000 		.4byte	.LFE10-.LFB10
 1276 026b 01       		.uleb128 0x1
 1277 026c 9C       		.byte	0x9c
 1278 026d 84020000 		.4byte	0x284
 1279 0271 09       		.uleb128 0x9
 1280 0272 06000000 		.4byte	.LVL17
 1281 0276 F3010000 		.4byte	0x1f3
 1282 027a 09       		.uleb128 0x9
 1283 027b 0C000000 		.4byte	.LVL18
 1284 027f CA010000 		.4byte	0x1ca
 1285 0283 00       		.byte	0
 1286 0284 0D       		.uleb128 0xd
 1287 0285 2E040000 		.4byte	.LASF33
 1288 0289 01       		.byte	0x1
 1289 028a AB02     		.2byte	0x2ab
 1290 028c 6B000000 		.4byte	0x6b
 1291 0290 00000000 		.4byte	.LFB11
 1292 0294 18000000 		.4byte	.LFE11-.LFB11
 1293 0298 01       		.uleb128 0x1
 1294 0299 9C       		.byte	0x9c
 1295 029a AD020000 		.4byte	0x2ad
 1296 029e 0E       		.uleb128 0xe
 1297 029f 10020000 		.4byte	.LASF34
 1298 02a3 01       		.byte	0x1
 1299 02a4 AE02     		.2byte	0x2ae
 1300 02a6 6B000000 		.4byte	0x6b
 1301 02aa 01       		.uleb128 0x1
 1302 02ab 50       		.byte	0x50
 1303 02ac 00       		.byte	0
 1304 02ad 0B       		.uleb128 0xb
 1305 02ae 30030000 		.4byte	.LASF35
 1306 02b2 01       		.byte	0x1
 1307 02b3 F502     		.2byte	0x2f5
 1308 02b5 00000000 		.4byte	.LFB12
 1309 02b9 24000000 		.4byte	.LFE12-.LFB12
 1310 02bd 01       		.uleb128 0x1
 1311 02be 9C       		.byte	0x9c
 1312 02bf E6020000 		.4byte	0x2e6
 1313 02c3 0F       		.uleb128 0xf
 1314 02c4 63040000 		.4byte	.LASF21
 1315 02c8 01       		.byte	0x1
 1316 02c9 F702     		.2byte	0x2f7
 1317 02cb 6B000000 		.4byte	0x6b
 1318 02cf 74000000 		.4byte	.LLST4
 1319 02d3 09       		.uleb128 0x9
 1320 02d4 06000000 		.4byte	.LVL20
 1321 02d8 BF050000 		.4byte	0x5bf
 1322 02dc 09       		.uleb128 0x9
 1323 02dd 1C000000 		.4byte	.LVL21
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 52


 1324 02e1 CA050000 		.4byte	0x5ca
 1325 02e5 00       		.byte	0
 1326 02e6 0B       		.uleb128 0xb
 1327 02e7 45030000 		.4byte	.LASF36
 1328 02eb 01       		.byte	0x1
 1329 02ec 2D03     		.2byte	0x32d
 1330 02ee 00000000 		.4byte	.LFB13
 1331 02f2 02000000 		.4byte	.LFE13-.LFB13
 1332 02f6 01       		.uleb128 0x1
 1333 02f7 9C       		.byte	0x9c
 1334 02f8 0B030000 		.4byte	0x30b
 1335 02fc 0C       		.uleb128 0xc
 1336 02fd 90010000 		.4byte	.LASF37
 1337 0301 01       		.byte	0x1
 1338 0302 2D03     		.2byte	0x32d
 1339 0304 6B000000 		.4byte	0x6b
 1340 0308 01       		.uleb128 0x1
 1341 0309 50       		.byte	0x50
 1342 030a 00       		.byte	0
 1343 030b 0B       		.uleb128 0xb
 1344 030c B8020000 		.4byte	.LASF38
 1345 0310 01       		.byte	0x1
 1346 0311 5903     		.2byte	0x359
 1347 0313 00000000 		.4byte	.LFB14
 1348 0317 0C000000 		.4byte	.LFE14-.LFB14
 1349 031b 01       		.uleb128 0x1
 1350 031c 9C       		.byte	0x9c
 1351 031d 30030000 		.4byte	0x330
 1352 0321 0C       		.uleb128 0xc
 1353 0322 EE020000 		.4byte	.LASF39
 1354 0326 01       		.byte	0x1
 1355 0327 5903     		.2byte	0x359
 1356 0329 6B000000 		.4byte	0x6b
 1357 032d 01       		.uleb128 0x1
 1358 032e 50       		.byte	0x50
 1359 032f 00       		.byte	0
 1360 0330 0B       		.uleb128 0xb
 1361 0331 CD020000 		.4byte	.LASF40
 1362 0335 01       		.byte	0x1
 1363 0336 6D03     		.2byte	0x36d
 1364 0338 00000000 		.4byte	.LFB15
 1365 033c 0C000000 		.4byte	.LFE15-.LFB15
 1366 0340 01       		.uleb128 0x1
 1367 0341 9C       		.byte	0x9c
 1368 0342 55030000 		.4byte	0x355
 1369 0346 0C       		.uleb128 0xc
 1370 0347 EE020000 		.4byte	.LASF39
 1371 034b 01       		.byte	0x1
 1372 034c 6D03     		.2byte	0x36d
 1373 034e 6B000000 		.4byte	0x6b
 1374 0352 01       		.uleb128 0x1
 1375 0353 50       		.byte	0x50
 1376 0354 00       		.byte	0
 1377 0355 0B       		.uleb128 0xb
 1378 0356 FF020000 		.4byte	.LASF41
 1379 035a 01       		.byte	0x1
 1380 035b 8C03     		.2byte	0x38c
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 53


 1381 035d 00000000 		.4byte	.LFB16
 1382 0361 0C000000 		.4byte	.LFE16-.LFB16
 1383 0365 01       		.uleb128 0x1
 1384 0366 9C       		.byte	0x9c
 1385 0367 7A030000 		.4byte	0x37a
 1386 036b 0C       		.uleb128 0xc
 1387 036c 57020000 		.4byte	.LASF25
 1388 0370 01       		.byte	0x1
 1389 0371 8C03     		.2byte	0x38c
 1390 0373 6B000000 		.4byte	0x6b
 1391 0377 01       		.uleb128 0x1
 1392 0378 50       		.byte	0x50
 1393 0379 00       		.byte	0
 1394 037a 0B       		.uleb128 0xb
 1395 037b 94020000 		.4byte	.LASF42
 1396 037f 01       		.byte	0x1
 1397 0380 AE03     		.2byte	0x3ae
 1398 0382 00000000 		.4byte	.LFB17
 1399 0386 14000000 		.4byte	.LFE17-.LFB17
 1400 038a 01       		.uleb128 0x1
 1401 038b 9C       		.byte	0x9c
 1402 038c 9F030000 		.4byte	0x39f
 1403 0390 0C       		.uleb128 0xc
 1404 0391 52000000 		.4byte	.LASF43
 1405 0395 01       		.byte	0x1
 1406 0396 AE03     		.2byte	0x3ae
 1407 0398 6B000000 		.4byte	0x6b
 1408 039c 01       		.uleb128 0x1
 1409 039d 50       		.byte	0x50
 1410 039e 00       		.byte	0
 1411 039f 0A       		.uleb128 0xa
 1412 03a0 D3010000 		.4byte	.LASF45
 1413 03a4 01       		.byte	0x1
 1414 03a5 EB03     		.2byte	0x3eb
 1415 03a7 6B000000 		.4byte	0x6b
 1416 03ab 00000000 		.4byte	.LFB18
 1417 03af 0C000000 		.4byte	.LFE18-.LFB18
 1418 03b3 01       		.uleb128 0x1
 1419 03b4 9C       		.byte	0x9c
 1420 03b5 0B       		.uleb128 0xb
 1421 03b6 5D000000 		.4byte	.LASF46
 1422 03ba 01       		.byte	0x1
 1423 03bb 1104     		.2byte	0x411
 1424 03bd 00000000 		.4byte	.LFB19
 1425 03c1 18000000 		.4byte	.LFE19-.LFB19
 1426 03c5 01       		.uleb128 0x1
 1427 03c6 9C       		.byte	0x9c
 1428 03c7 DA030000 		.4byte	0x3da
 1429 03cb 0C       		.uleb128 0xc
 1430 03cc 52000000 		.4byte	.LASF43
 1431 03d0 01       		.byte	0x1
 1432 03d1 1104     		.2byte	0x411
 1433 03d3 6B000000 		.4byte	0x6b
 1434 03d7 01       		.uleb128 0x1
 1435 03d8 50       		.byte	0x50
 1436 03d9 00       		.byte	0
 1437 03da 0B       		.uleb128 0xb
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 54


 1438 03db 1F030000 		.4byte	.LASF47
 1439 03df 01       		.byte	0x1
 1440 03e0 7904     		.2byte	0x479
 1441 03e2 00000000 		.4byte	.LFB20
 1442 03e6 24000000 		.4byte	.LFE20-.LFB20
 1443 03ea 01       		.uleb128 0x1
 1444 03eb 9C       		.byte	0x9c
 1445 03ec 1A040000 		.4byte	0x41a
 1446 03f0 10       		.uleb128 0x10
 1447 03f1 7B000000 		.4byte	.LASF48
 1448 03f5 01       		.byte	0x1
 1449 03f6 7904     		.2byte	0x479
 1450 03f8 1A040000 		.4byte	0x41a
 1451 03fc 87000000 		.4byte	.LLST5
 1452 0400 0F       		.uleb128 0xf
 1453 0401 36020000 		.4byte	.LASF49
 1454 0405 01       		.byte	0x1
 1455 0406 7B04     		.2byte	0x47b
 1456 0408 77000000 		.4byte	0x77
 1457 040c C9000000 		.4byte	.LLST6
 1458 0410 09       		.uleb128 0x9
 1459 0411 0E000000 		.4byte	.LVL31
 1460 0415 B5030000 		.4byte	0x3b5
 1461 0419 00       		.byte	0
 1462 041a 11       		.uleb128 0x11
 1463 041b 04       		.byte	0x4
 1464 041c 20040000 		.4byte	0x420
 1465 0420 12       		.uleb128 0x12
 1466 0421 91000000 		.4byte	0x91
 1467 0425 0B       		.uleb128 0xb
 1468 0426 9E040000 		.4byte	.LASF50
 1469 042a 01       		.byte	0x1
 1470 042b A704     		.2byte	0x4a7
 1471 042d 00000000 		.4byte	.LFB21
 1472 0431 28000000 		.4byte	.LFE21-.LFB21
 1473 0435 01       		.uleb128 0x1
 1474 0436 9C       		.byte	0x9c
 1475 0437 75040000 		.4byte	0x475
 1476 043b 10       		.uleb128 0x10
 1477 043c 7B000000 		.4byte	.LASF48
 1478 0440 01       		.byte	0x1
 1479 0441 A704     		.2byte	0x4a7
 1480 0443 75040000 		.4byte	0x475
 1481 0447 0A010000 		.4byte	.LLST7
 1482 044b 10       		.uleb128 0x10
 1483 044c 24040000 		.4byte	.LASF51
 1484 0450 01       		.byte	0x1
 1485 0451 A704     		.2byte	0x4a7
 1486 0453 6B000000 		.4byte	0x6b
 1487 0457 4C010000 		.4byte	.LLST8
 1488 045b 0F       		.uleb128 0xf
 1489 045c 36020000 		.4byte	.LASF49
 1490 0460 01       		.byte	0x1
 1491 0461 AA04     		.2byte	0x4aa
 1492 0463 6B000000 		.4byte	0x6b
 1493 0467 86010000 		.4byte	.LLST9
 1494 046b 09       		.uleb128 0x9
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 55


 1495 046c 0E000000 		.4byte	.LVL39
 1496 0470 B5030000 		.4byte	0x3b5
 1497 0474 00       		.byte	0
 1498 0475 11       		.uleb128 0x11
 1499 0476 04       		.byte	0x4
 1500 0477 7B040000 		.4byte	0x47b
 1501 047b 12       		.uleb128 0x12
 1502 047c 6B000000 		.4byte	0x6b
 1503 0480 0B       		.uleb128 0xb
 1504 0481 5E010000 		.4byte	.LASF52
 1505 0485 01       		.byte	0x1
 1506 0486 CE04     		.2byte	0x4ce
 1507 0488 00000000 		.4byte	.LFB22
 1508 048c 20000000 		.4byte	.LFE22-.LFB22
 1509 0490 01       		.uleb128 0x1
 1510 0491 9C       		.byte	0x9c
 1511 0492 D2040000 		.4byte	0x4d2
 1512 0496 10       		.uleb128 0x10
 1513 0497 52000000 		.4byte	.LASF43
 1514 049b 01       		.byte	0x1
 1515 049c CE04     		.2byte	0x4ce
 1516 049e 6B000000 		.4byte	0x6b
 1517 04a2 C7010000 		.4byte	.LLST10
 1518 04a6 09       		.uleb128 0x9
 1519 04a7 0C000000 		.4byte	.LVL46
 1520 04ab B5030000 		.4byte	0x3b5
 1521 04af 13       		.uleb128 0x13
 1522 04b0 12000000 		.4byte	.LVL47
 1523 04b4 B5030000 		.4byte	0x3b5
 1524 04b8 C2040000 		.4byte	0x4c2
 1525 04bc 14       		.uleb128 0x14
 1526 04bd 01       		.uleb128 0x1
 1527 04be 50       		.byte	0x50
 1528 04bf 01       		.uleb128 0x1
 1529 04c0 3D       		.byte	0x3d
 1530 04c1 00       		.byte	0
 1531 04c2 15       		.uleb128 0x15
 1532 04c3 18000000 		.4byte	.LVL48
 1533 04c7 B5030000 		.4byte	0x3b5
 1534 04cb 14       		.uleb128 0x14
 1535 04cc 01       		.uleb128 0x1
 1536 04cd 50       		.byte	0x50
 1537 04ce 01       		.uleb128 0x1
 1538 04cf 3A       		.byte	0x3a
 1539 04d0 00       		.byte	0
 1540 04d1 00       		.byte	0
 1541 04d2 0D       		.uleb128 0xd
 1542 04d3 24010000 		.4byte	.LASF53
 1543 04d7 01       		.byte	0x1
 1544 04d8 F904     		.2byte	0x4f9
 1545 04da 6B000000 		.4byte	0x6b
 1546 04de 00000000 		.4byte	.LFB23
 1547 04e2 24000000 		.4byte	.LFE23-.LFB23
 1548 04e6 01       		.uleb128 0x1
 1549 04e7 9C       		.byte	0x9c
 1550 04e8 FD040000 		.4byte	0x4fd
 1551 04ec 0F       		.uleb128 0xf
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 56


 1552 04ed 10020000 		.4byte	.LASF34
 1553 04f1 01       		.byte	0x1
 1554 04f2 FC04     		.2byte	0x4fc
 1555 04f4 6B000000 		.4byte	0x6b
 1556 04f8 E8010000 		.4byte	.LLST11
 1557 04fc 00       		.byte	0
 1558 04fd 0B       		.uleb128 0xb
 1559 04fe 27000000 		.4byte	.LASF54
 1560 0502 01       		.byte	0x1
 1561 0503 4A05     		.2byte	0x54a
 1562 0505 00000000 		.4byte	.LFB24
 1563 0509 24000000 		.4byte	.LFE24-.LFB24
 1564 050d 01       		.uleb128 0x1
 1565 050e 9C       		.byte	0x9c
 1566 050f 36050000 		.4byte	0x536
 1567 0513 0F       		.uleb128 0xf
 1568 0514 63040000 		.4byte	.LASF21
 1569 0518 01       		.byte	0x1
 1570 0519 4C05     		.2byte	0x54c
 1571 051b 6B000000 		.4byte	0x6b
 1572 051f 06020000 		.4byte	.LLST12
 1573 0523 09       		.uleb128 0x9
 1574 0524 06000000 		.4byte	.LVL51
 1575 0528 BF050000 		.4byte	0x5bf
 1576 052c 09       		.uleb128 0x9
 1577 052d 1C000000 		.4byte	.LVL52
 1578 0531 CA050000 		.4byte	0x5ca
 1579 0535 00       		.byte	0
 1580 0536 0B       		.uleb128 0xb
 1581 0537 82000000 		.4byte	.LASF55
 1582 053b 01       		.byte	0x1
 1583 053c A005     		.2byte	0x5a0
 1584 053e 00000000 		.4byte	.LFB25
 1585 0542 58000000 		.4byte	.LFE25-.LFB25
 1586 0546 01       		.uleb128 0x1
 1587 0547 9C       		.byte	0x9c
 1588 0548 89050000 		.4byte	0x589
 1589 054c 10       		.uleb128 0x10
 1590 054d BE010000 		.4byte	.LASF56
 1591 0551 01       		.byte	0x1
 1592 0552 A005     		.2byte	0x5a0
 1593 0554 6B000000 		.4byte	0x6b
 1594 0558 19020000 		.4byte	.LLST13
 1595 055c 16       		.uleb128 0x16
 1596 055d 06000000 		.4byte	.LBB2
 1597 0561 52000000 		.4byte	.LBE2-.LBB2
 1598 0565 0F       		.uleb128 0xf
 1599 0566 A7020000 		.4byte	.LASF57
 1600 056a 01       		.byte	0x1
 1601 056b A805     		.2byte	0x5a8
 1602 056d 6B000000 		.4byte	0x6b
 1603 0571 3A020000 		.4byte	.LLST14
 1604 0575 0E       		.uleb128 0xe
 1605 0576 55010000 		.4byte	.LASF58
 1606 057a 01       		.byte	0x1
 1607 057b D005     		.2byte	0x5d0
 1608 057d 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 57


 1609 0581 05       		.uleb128 0x5
 1610 0582 03       		.byte	0x3
 1611 0583 01000000 		.4byte	txPeriod.5099
 1612 0587 00       		.byte	0
 1613 0588 00       		.byte	0
 1614 0589 0B       		.uleb128 0xb
 1615 058a 3F020000 		.4byte	.LASF59
 1616 058e 01       		.byte	0x1
 1617 058f 2406     		.2byte	0x624
 1618 0591 00000000 		.4byte	.LFB26
 1619 0595 02000000 		.4byte	.LFE26-.LFB26
 1620 0599 01       		.uleb128 0x1
 1621 059a 9C       		.byte	0x9c
 1622 059b AE050000 		.4byte	0x5ae
 1623 059f 0C       		.uleb128 0xc
 1624 05a0 90010000 		.4byte	.LASF37
 1625 05a4 01       		.byte	0x1
 1626 05a5 2406     		.2byte	0x624
 1627 05a7 6B000000 		.4byte	0x6b
 1628 05ab 01       		.uleb128 0x1
 1629 05ac 50       		.byte	0x50
 1630 05ad 00       		.byte	0
 1631 05ae 17       		.uleb128 0x17
 1632 05af 6C000000 		.4byte	.LASF66
 1633 05b3 01       		.byte	0x1
 1634 05b4 1B       		.byte	0x1b
 1635 05b5 6B000000 		.4byte	0x6b
 1636 05b9 05       		.uleb128 0x5
 1637 05ba 03       		.byte	0x3
 1638 05bb 00000000 		.4byte	UART_1_initVar
 1639 05bf 18       		.uleb128 0x18
 1640 05c0 F9010000 		.4byte	.LASF60
 1641 05c4 F9010000 		.4byte	.LASF60
 1642 05c8 03       		.byte	0x3
 1643 05c9 7D       		.byte	0x7d
 1644 05ca 18       		.uleb128 0x18
 1645 05cb 3C000000 		.4byte	.LASF61
 1646 05cf 3C000000 		.4byte	.LASF61
 1647 05d3 03       		.byte	0x3
 1648 05d4 7E       		.byte	0x7e
 1649 05d5 00       		.byte	0
 1650              		.section	.debug_abbrev,"",%progbits
 1651              	.Ldebug_abbrev0:
 1652 0000 01       		.uleb128 0x1
 1653 0001 11       		.uleb128 0x11
 1654 0002 01       		.byte	0x1
 1655 0003 25       		.uleb128 0x25
 1656 0004 0E       		.uleb128 0xe
 1657 0005 13       		.uleb128 0x13
 1658 0006 0B       		.uleb128 0xb
 1659 0007 03       		.uleb128 0x3
 1660 0008 0E       		.uleb128 0xe
 1661 0009 1B       		.uleb128 0x1b
 1662 000a 0E       		.uleb128 0xe
 1663 000b 55       		.uleb128 0x55
 1664 000c 17       		.uleb128 0x17
 1665 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 58


 1666 000e 01       		.uleb128 0x1
 1667 000f 10       		.uleb128 0x10
 1668 0010 17       		.uleb128 0x17
 1669 0011 00       		.byte	0
 1670 0012 00       		.byte	0
 1671 0013 02       		.uleb128 0x2
 1672 0014 24       		.uleb128 0x24
 1673 0015 00       		.byte	0
 1674 0016 0B       		.uleb128 0xb
 1675 0017 0B       		.uleb128 0xb
 1676 0018 3E       		.uleb128 0x3e
 1677 0019 0B       		.uleb128 0xb
 1678 001a 03       		.uleb128 0x3
 1679 001b 0E       		.uleb128 0xe
 1680 001c 00       		.byte	0
 1681 001d 00       		.byte	0
 1682 001e 03       		.uleb128 0x3
 1683 001f 24       		.uleb128 0x24
 1684 0020 00       		.byte	0
 1685 0021 0B       		.uleb128 0xb
 1686 0022 0B       		.uleb128 0xb
 1687 0023 3E       		.uleb128 0x3e
 1688 0024 0B       		.uleb128 0xb
 1689 0025 03       		.uleb128 0x3
 1690 0026 08       		.uleb128 0x8
 1691 0027 00       		.byte	0
 1692 0028 00       		.byte	0
 1693 0029 04       		.uleb128 0x4
 1694 002a 16       		.uleb128 0x16
 1695 002b 00       		.byte	0
 1696 002c 03       		.uleb128 0x3
 1697 002d 0E       		.uleb128 0xe
 1698 002e 3A       		.uleb128 0x3a
 1699 002f 0B       		.uleb128 0xb
 1700 0030 3B       		.uleb128 0x3b
 1701 0031 05       		.uleb128 0x5
 1702 0032 49       		.uleb128 0x49
 1703 0033 13       		.uleb128 0x13
 1704 0034 00       		.byte	0
 1705 0035 00       		.byte	0
 1706 0036 05       		.uleb128 0x5
 1707 0037 35       		.uleb128 0x35
 1708 0038 00       		.byte	0
 1709 0039 49       		.uleb128 0x49
 1710 003a 13       		.uleb128 0x13
 1711 003b 00       		.byte	0
 1712 003c 00       		.byte	0
 1713 003d 06       		.uleb128 0x6
 1714 003e 2E       		.uleb128 0x2e
 1715 003f 00       		.byte	0
 1716 0040 3F       		.uleb128 0x3f
 1717 0041 19       		.uleb128 0x19
 1718 0042 03       		.uleb128 0x3
 1719 0043 0E       		.uleb128 0xe
 1720 0044 3A       		.uleb128 0x3a
 1721 0045 0B       		.uleb128 0xb
 1722 0046 3B       		.uleb128 0x3b
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 59


 1723 0047 0B       		.uleb128 0xb
 1724 0048 27       		.uleb128 0x27
 1725 0049 19       		.uleb128 0x19
 1726 004a 11       		.uleb128 0x11
 1727 004b 01       		.uleb128 0x1
 1728 004c 12       		.uleb128 0x12
 1729 004d 06       		.uleb128 0x6
 1730 004e 40       		.uleb128 0x40
 1731 004f 18       		.uleb128 0x18
 1732 0050 9742     		.uleb128 0x2117
 1733 0052 19       		.uleb128 0x19
 1734 0053 00       		.byte	0
 1735 0054 00       		.byte	0
 1736 0055 07       		.uleb128 0x7
 1737 0056 2E       		.uleb128 0x2e
 1738 0057 01       		.byte	0x1
 1739 0058 3F       		.uleb128 0x3f
 1740 0059 19       		.uleb128 0x19
 1741 005a 03       		.uleb128 0x3
 1742 005b 0E       		.uleb128 0xe
 1743 005c 3A       		.uleb128 0x3a
 1744 005d 0B       		.uleb128 0xb
 1745 005e 3B       		.uleb128 0x3b
 1746 005f 0B       		.uleb128 0xb
 1747 0060 27       		.uleb128 0x27
 1748 0061 19       		.uleb128 0x19
 1749 0062 11       		.uleb128 0x11
 1750 0063 01       		.uleb128 0x1
 1751 0064 12       		.uleb128 0x12
 1752 0065 06       		.uleb128 0x6
 1753 0066 40       		.uleb128 0x40
 1754 0067 18       		.uleb128 0x18
 1755 0068 9742     		.uleb128 0x2117
 1756 006a 19       		.uleb128 0x19
 1757 006b 01       		.uleb128 0x1
 1758 006c 13       		.uleb128 0x13
 1759 006d 00       		.byte	0
 1760 006e 00       		.byte	0
 1761 006f 08       		.uleb128 0x8
 1762 0070 34       		.uleb128 0x34
 1763 0071 00       		.byte	0
 1764 0072 03       		.uleb128 0x3
 1765 0073 0E       		.uleb128 0xe
 1766 0074 3A       		.uleb128 0x3a
 1767 0075 0B       		.uleb128 0xb
 1768 0076 3B       		.uleb128 0x3b
 1769 0077 0B       		.uleb128 0xb
 1770 0078 49       		.uleb128 0x49
 1771 0079 13       		.uleb128 0x13
 1772 007a 02       		.uleb128 0x2
 1773 007b 17       		.uleb128 0x17
 1774 007c 00       		.byte	0
 1775 007d 00       		.byte	0
 1776 007e 09       		.uleb128 0x9
 1777 007f 898201   		.uleb128 0x4109
 1778 0082 00       		.byte	0
 1779 0083 11       		.uleb128 0x11
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 60


 1780 0084 01       		.uleb128 0x1
 1781 0085 31       		.uleb128 0x31
 1782 0086 13       		.uleb128 0x13
 1783 0087 00       		.byte	0
 1784 0088 00       		.byte	0
 1785 0089 0A       		.uleb128 0xa
 1786 008a 2E       		.uleb128 0x2e
 1787 008b 00       		.byte	0
 1788 008c 3F       		.uleb128 0x3f
 1789 008d 19       		.uleb128 0x19
 1790 008e 03       		.uleb128 0x3
 1791 008f 0E       		.uleb128 0xe
 1792 0090 3A       		.uleb128 0x3a
 1793 0091 0B       		.uleb128 0xb
 1794 0092 3B       		.uleb128 0x3b
 1795 0093 05       		.uleb128 0x5
 1796 0094 27       		.uleb128 0x27
 1797 0095 19       		.uleb128 0x19
 1798 0096 49       		.uleb128 0x49
 1799 0097 13       		.uleb128 0x13
 1800 0098 11       		.uleb128 0x11
 1801 0099 01       		.uleb128 0x1
 1802 009a 12       		.uleb128 0x12
 1803 009b 06       		.uleb128 0x6
 1804 009c 40       		.uleb128 0x40
 1805 009d 18       		.uleb128 0x18
 1806 009e 9742     		.uleb128 0x2117
 1807 00a0 19       		.uleb128 0x19
 1808 00a1 00       		.byte	0
 1809 00a2 00       		.byte	0
 1810 00a3 0B       		.uleb128 0xb
 1811 00a4 2E       		.uleb128 0x2e
 1812 00a5 01       		.byte	0x1
 1813 00a6 3F       		.uleb128 0x3f
 1814 00a7 19       		.uleb128 0x19
 1815 00a8 03       		.uleb128 0x3
 1816 00a9 0E       		.uleb128 0xe
 1817 00aa 3A       		.uleb128 0x3a
 1818 00ab 0B       		.uleb128 0xb
 1819 00ac 3B       		.uleb128 0x3b
 1820 00ad 05       		.uleb128 0x5
 1821 00ae 27       		.uleb128 0x27
 1822 00af 19       		.uleb128 0x19
 1823 00b0 11       		.uleb128 0x11
 1824 00b1 01       		.uleb128 0x1
 1825 00b2 12       		.uleb128 0x12
 1826 00b3 06       		.uleb128 0x6
 1827 00b4 40       		.uleb128 0x40
 1828 00b5 18       		.uleb128 0x18
 1829 00b6 9742     		.uleb128 0x2117
 1830 00b8 19       		.uleb128 0x19
 1831 00b9 01       		.uleb128 0x1
 1832 00ba 13       		.uleb128 0x13
 1833 00bb 00       		.byte	0
 1834 00bc 00       		.byte	0
 1835 00bd 0C       		.uleb128 0xc
 1836 00be 05       		.uleb128 0x5
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 61


 1837 00bf 00       		.byte	0
 1838 00c0 03       		.uleb128 0x3
 1839 00c1 0E       		.uleb128 0xe
 1840 00c2 3A       		.uleb128 0x3a
 1841 00c3 0B       		.uleb128 0xb
 1842 00c4 3B       		.uleb128 0x3b
 1843 00c5 05       		.uleb128 0x5
 1844 00c6 49       		.uleb128 0x49
 1845 00c7 13       		.uleb128 0x13
 1846 00c8 02       		.uleb128 0x2
 1847 00c9 18       		.uleb128 0x18
 1848 00ca 00       		.byte	0
 1849 00cb 00       		.byte	0
 1850 00cc 0D       		.uleb128 0xd
 1851 00cd 2E       		.uleb128 0x2e
 1852 00ce 01       		.byte	0x1
 1853 00cf 3F       		.uleb128 0x3f
 1854 00d0 19       		.uleb128 0x19
 1855 00d1 03       		.uleb128 0x3
 1856 00d2 0E       		.uleb128 0xe
 1857 00d3 3A       		.uleb128 0x3a
 1858 00d4 0B       		.uleb128 0xb
 1859 00d5 3B       		.uleb128 0x3b
 1860 00d6 05       		.uleb128 0x5
 1861 00d7 27       		.uleb128 0x27
 1862 00d8 19       		.uleb128 0x19
 1863 00d9 49       		.uleb128 0x49
 1864 00da 13       		.uleb128 0x13
 1865 00db 11       		.uleb128 0x11
 1866 00dc 01       		.uleb128 0x1
 1867 00dd 12       		.uleb128 0x12
 1868 00de 06       		.uleb128 0x6
 1869 00df 40       		.uleb128 0x40
 1870 00e0 18       		.uleb128 0x18
 1871 00e1 9742     		.uleb128 0x2117
 1872 00e3 19       		.uleb128 0x19
 1873 00e4 01       		.uleb128 0x1
 1874 00e5 13       		.uleb128 0x13
 1875 00e6 00       		.byte	0
 1876 00e7 00       		.byte	0
 1877 00e8 0E       		.uleb128 0xe
 1878 00e9 34       		.uleb128 0x34
 1879 00ea 00       		.byte	0
 1880 00eb 03       		.uleb128 0x3
 1881 00ec 0E       		.uleb128 0xe
 1882 00ed 3A       		.uleb128 0x3a
 1883 00ee 0B       		.uleb128 0xb
 1884 00ef 3B       		.uleb128 0x3b
 1885 00f0 05       		.uleb128 0x5
 1886 00f1 49       		.uleb128 0x49
 1887 00f2 13       		.uleb128 0x13
 1888 00f3 02       		.uleb128 0x2
 1889 00f4 18       		.uleb128 0x18
 1890 00f5 00       		.byte	0
 1891 00f6 00       		.byte	0
 1892 00f7 0F       		.uleb128 0xf
 1893 00f8 34       		.uleb128 0x34
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 62


 1894 00f9 00       		.byte	0
 1895 00fa 03       		.uleb128 0x3
 1896 00fb 0E       		.uleb128 0xe
 1897 00fc 3A       		.uleb128 0x3a
 1898 00fd 0B       		.uleb128 0xb
 1899 00fe 3B       		.uleb128 0x3b
 1900 00ff 05       		.uleb128 0x5
 1901 0100 49       		.uleb128 0x49
 1902 0101 13       		.uleb128 0x13
 1903 0102 02       		.uleb128 0x2
 1904 0103 17       		.uleb128 0x17
 1905 0104 00       		.byte	0
 1906 0105 00       		.byte	0
 1907 0106 10       		.uleb128 0x10
 1908 0107 05       		.uleb128 0x5
 1909 0108 00       		.byte	0
 1910 0109 03       		.uleb128 0x3
 1911 010a 0E       		.uleb128 0xe
 1912 010b 3A       		.uleb128 0x3a
 1913 010c 0B       		.uleb128 0xb
 1914 010d 3B       		.uleb128 0x3b
 1915 010e 05       		.uleb128 0x5
 1916 010f 49       		.uleb128 0x49
 1917 0110 13       		.uleb128 0x13
 1918 0111 02       		.uleb128 0x2
 1919 0112 17       		.uleb128 0x17
 1920 0113 00       		.byte	0
 1921 0114 00       		.byte	0
 1922 0115 11       		.uleb128 0x11
 1923 0116 0F       		.uleb128 0xf
 1924 0117 00       		.byte	0
 1925 0118 0B       		.uleb128 0xb
 1926 0119 0B       		.uleb128 0xb
 1927 011a 49       		.uleb128 0x49
 1928 011b 13       		.uleb128 0x13
 1929 011c 00       		.byte	0
 1930 011d 00       		.byte	0
 1931 011e 12       		.uleb128 0x12
 1932 011f 26       		.uleb128 0x26
 1933 0120 00       		.byte	0
 1934 0121 49       		.uleb128 0x49
 1935 0122 13       		.uleb128 0x13
 1936 0123 00       		.byte	0
 1937 0124 00       		.byte	0
 1938 0125 13       		.uleb128 0x13
 1939 0126 898201   		.uleb128 0x4109
 1940 0129 01       		.byte	0x1
 1941 012a 11       		.uleb128 0x11
 1942 012b 01       		.uleb128 0x1
 1943 012c 31       		.uleb128 0x31
 1944 012d 13       		.uleb128 0x13
 1945 012e 01       		.uleb128 0x1
 1946 012f 13       		.uleb128 0x13
 1947 0130 00       		.byte	0
 1948 0131 00       		.byte	0
 1949 0132 14       		.uleb128 0x14
 1950 0133 8A8201   		.uleb128 0x410a
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 63


 1951 0136 00       		.byte	0
 1952 0137 02       		.uleb128 0x2
 1953 0138 18       		.uleb128 0x18
 1954 0139 9142     		.uleb128 0x2111
 1955 013b 18       		.uleb128 0x18
 1956 013c 00       		.byte	0
 1957 013d 00       		.byte	0
 1958 013e 15       		.uleb128 0x15
 1959 013f 898201   		.uleb128 0x4109
 1960 0142 01       		.byte	0x1
 1961 0143 11       		.uleb128 0x11
 1962 0144 01       		.uleb128 0x1
 1963 0145 31       		.uleb128 0x31
 1964 0146 13       		.uleb128 0x13
 1965 0147 00       		.byte	0
 1966 0148 00       		.byte	0
 1967 0149 16       		.uleb128 0x16
 1968 014a 0B       		.uleb128 0xb
 1969 014b 01       		.byte	0x1
 1970 014c 11       		.uleb128 0x11
 1971 014d 01       		.uleb128 0x1
 1972 014e 12       		.uleb128 0x12
 1973 014f 06       		.uleb128 0x6
 1974 0150 00       		.byte	0
 1975 0151 00       		.byte	0
 1976 0152 17       		.uleb128 0x17
 1977 0153 34       		.uleb128 0x34
 1978 0154 00       		.byte	0
 1979 0155 03       		.uleb128 0x3
 1980 0156 0E       		.uleb128 0xe
 1981 0157 3A       		.uleb128 0x3a
 1982 0158 0B       		.uleb128 0xb
 1983 0159 3B       		.uleb128 0x3b
 1984 015a 0B       		.uleb128 0xb
 1985 015b 49       		.uleb128 0x49
 1986 015c 13       		.uleb128 0x13
 1987 015d 3F       		.uleb128 0x3f
 1988 015e 19       		.uleb128 0x19
 1989 015f 02       		.uleb128 0x2
 1990 0160 18       		.uleb128 0x18
 1991 0161 00       		.byte	0
 1992 0162 00       		.byte	0
 1993 0163 18       		.uleb128 0x18
 1994 0164 2E       		.uleb128 0x2e
 1995 0165 00       		.byte	0
 1996 0166 3F       		.uleb128 0x3f
 1997 0167 19       		.uleb128 0x19
 1998 0168 3C       		.uleb128 0x3c
 1999 0169 19       		.uleb128 0x19
 2000 016a 6E       		.uleb128 0x6e
 2001 016b 0E       		.uleb128 0xe
 2002 016c 03       		.uleb128 0x3
 2003 016d 0E       		.uleb128 0xe
 2004 016e 3A       		.uleb128 0x3a
 2005 016f 0B       		.uleb128 0xb
 2006 0170 3B       		.uleb128 0x3b
 2007 0171 0B       		.uleb128 0xb
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 64


 2008 0172 00       		.byte	0
 2009 0173 00       		.byte	0
 2010 0174 00       		.byte	0
 2011              		.section	.debug_loc,"",%progbits
 2012              	.Ldebug_loc0:
 2013              	.LLST0:
 2014 0000 06000000 		.4byte	.LVL0
 2015 0004 27000000 		.4byte	.LVL1-1
 2016 0008 0100     		.2byte	0x1
 2017 000a 50       		.byte	0x50
 2018 000b 00000000 		.4byte	0
 2019 000f 00000000 		.4byte	0
 2020              	.LLST1:
 2021 0013 06000000 		.4byte	.LVL4
 2022 0017 27000000 		.4byte	.LVL5-1
 2023 001b 0100     		.2byte	0x1
 2024 001d 50       		.byte	0x50
 2025 001e 00000000 		.4byte	0
 2026 0022 00000000 		.4byte	0
 2027              	.LLST2:
 2028 0026 04000000 		.4byte	.LVL9
 2029 002a 08000000 		.4byte	.LVL10
 2030 002e 0600     		.2byte	0x6
 2031 0030 70       		.byte	0x70
 2032 0031 00       		.sleb128 0
 2033 0032 08       		.byte	0x8
 2034 0033 7F       		.byte	0x7f
 2035 0034 1A       		.byte	0x1a
 2036 0035 9F       		.byte	0x9f
 2037 0036 00000000 		.4byte	0
 2038 003a 00000000 		.4byte	0
 2039              	.LLST3:
 2040 003e 00000000 		.4byte	.LVL11
 2041 0042 12000000 		.4byte	.LVL13
 2042 0046 0200     		.2byte	0x2
 2043 0048 30       		.byte	0x30
 2044 0049 9F       		.byte	0x9f
 2045 004a 12000000 		.4byte	.LVL13
 2046 004e 1A000000 		.4byte	.LVL14
 2047 0052 0100     		.2byte	0x1
 2048 0054 50       		.byte	0x50
 2049 0055 1A000000 		.4byte	.LVL14
 2050 0059 1E000000 		.4byte	.LVL15
 2051 005d 0200     		.2byte	0x2
 2052 005f 30       		.byte	0x30
 2053 0060 9F       		.byte	0x9f
 2054 0061 1E000000 		.4byte	.LVL15
 2055 0065 2C000000 		.4byte	.LFE9
 2056 0069 0100     		.2byte	0x1
 2057 006b 50       		.byte	0x50
 2058 006c 00000000 		.4byte	0
 2059 0070 00000000 		.4byte	0
 2060              	.LLST4:
 2061 0074 06000000 		.4byte	.LVL20
 2062 0078 1B000000 		.4byte	.LVL21-1
 2063 007c 0100     		.2byte	0x1
 2064 007e 50       		.byte	0x50
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 65


 2065 007f 00000000 		.4byte	0
 2066 0083 00000000 		.4byte	0
 2067              	.LLST5:
 2068 0087 00000000 		.4byte	.LVL28
 2069 008b 0A000000 		.4byte	.LVL30
 2070 008f 0100     		.2byte	0x1
 2071 0091 50       		.byte	0x50
 2072 0092 0A000000 		.4byte	.LVL30
 2073 0096 14000000 		.4byte	.LVL34
 2074 009a 0100     		.2byte	0x1
 2075 009c 55       		.byte	0x55
 2076 009d 14000000 		.4byte	.LVL34
 2077 00a1 18000000 		.4byte	.LVL35
 2078 00a5 0100     		.2byte	0x1
 2079 00a7 50       		.byte	0x50
 2080 00a8 18000000 		.4byte	.LVL35
 2081 00ac 20000000 		.4byte	.LVL36
 2082 00b0 0100     		.2byte	0x1
 2083 00b2 55       		.byte	0x55
 2084 00b3 20000000 		.4byte	.LVL36
 2085 00b7 24000000 		.4byte	.LFE20
 2086 00bb 0400     		.2byte	0x4
 2087 00bd F3       		.byte	0xf3
 2088 00be 01       		.uleb128 0x1
 2089 00bf 50       		.byte	0x50
 2090 00c0 9F       		.byte	0x9f
 2091 00c1 00000000 		.4byte	0
 2092 00c5 00000000 		.4byte	0
 2093              	.LLST6:
 2094 00c9 02000000 		.4byte	.LVL29
 2095 00cd 0A000000 		.4byte	.LVL30
 2096 00d1 0200     		.2byte	0x2
 2097 00d3 30       		.byte	0x30
 2098 00d4 9F       		.byte	0x9f
 2099 00d5 0A000000 		.4byte	.LVL30
 2100 00d9 10000000 		.4byte	.LVL32
 2101 00dd 0100     		.2byte	0x1
 2102 00df 54       		.byte	0x54
 2103 00e0 12000000 		.4byte	.LVL33
 2104 00e4 14000000 		.4byte	.LVL34
 2105 00e8 0100     		.2byte	0x1
 2106 00ea 54       		.byte	0x54
 2107 00eb 14000000 		.4byte	.LVL34
 2108 00ef 18000000 		.4byte	.LVL35
 2109 00f3 0200     		.2byte	0x2
 2110 00f5 30       		.byte	0x30
 2111 00f6 9F       		.byte	0x9f
 2112 00f7 18000000 		.4byte	.LVL35
 2113 00fb 20000000 		.4byte	.LVL36
 2114 00ff 0100     		.2byte	0x1
 2115 0101 54       		.byte	0x54
 2116 0102 00000000 		.4byte	0
 2117 0106 00000000 		.4byte	0
 2118              	.LLST7:
 2119 010a 00000000 		.4byte	.LVL37
 2120 010e 08000000 		.4byte	.LVL38
 2121 0112 0100     		.2byte	0x1
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 66


 2122 0114 50       		.byte	0x50
 2123 0115 08000000 		.4byte	.LVL38
 2124 0119 14000000 		.4byte	.LVL42
 2125 011d 0100     		.2byte	0x1
 2126 011f 56       		.byte	0x56
 2127 0120 14000000 		.4byte	.LVL42
 2128 0124 1C000000 		.4byte	.LVL43
 2129 0128 0100     		.2byte	0x1
 2130 012a 50       		.byte	0x50
 2131 012b 1C000000 		.4byte	.LVL43
 2132 012f 22000000 		.4byte	.LVL44
 2133 0133 0100     		.2byte	0x1
 2134 0135 56       		.byte	0x56
 2135 0136 22000000 		.4byte	.LVL44
 2136 013a 28000000 		.4byte	.LFE21
 2137 013e 0400     		.2byte	0x4
 2138 0140 F3       		.byte	0xf3
 2139 0141 01       		.uleb128 0x1
 2140 0142 50       		.byte	0x50
 2141 0143 9F       		.byte	0x9f
 2142 0144 00000000 		.4byte	0
 2143 0148 00000000 		.4byte	0
 2144              	.LLST8:
 2145 014c 00000000 		.4byte	.LVL37
 2146 0150 08000000 		.4byte	.LVL38
 2147 0154 0100     		.2byte	0x1
 2148 0156 51       		.byte	0x51
 2149 0157 08000000 		.4byte	.LVL38
 2150 015b 14000000 		.4byte	.LVL42
 2151 015f 0400     		.2byte	0x4
 2152 0161 F3       		.byte	0xf3
 2153 0162 01       		.uleb128 0x1
 2154 0163 51       		.byte	0x51
 2155 0164 9F       		.byte	0x9f
 2156 0165 14000000 		.4byte	.LVL42
 2157 0169 1C000000 		.4byte	.LVL43
 2158 016d 0100     		.2byte	0x1
 2159 016f 51       		.byte	0x51
 2160 0170 1C000000 		.4byte	.LVL43
 2161 0174 28000000 		.4byte	.LFE21
 2162 0178 0400     		.2byte	0x4
 2163 017a F3       		.byte	0xf3
 2164 017b 01       		.uleb128 0x1
 2165 017c 51       		.byte	0x51
 2166 017d 9F       		.byte	0x9f
 2167 017e 00000000 		.4byte	0
 2168 0182 00000000 		.4byte	0
 2169              	.LLST9:
 2170 0186 00000000 		.4byte	.LVL37
 2171 018a 08000000 		.4byte	.LVL38
 2172 018e 0200     		.2byte	0x2
 2173 0190 30       		.byte	0x30
 2174 0191 9F       		.byte	0x9f
 2175 0192 08000000 		.4byte	.LVL38
 2176 0196 10000000 		.4byte	.LVL40
 2177 019a 0100     		.2byte	0x1
 2178 019c 54       		.byte	0x54
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 67


 2179 019d 12000000 		.4byte	.LVL41
 2180 01a1 14000000 		.4byte	.LVL42
 2181 01a5 0100     		.2byte	0x1
 2182 01a7 54       		.byte	0x54
 2183 01a8 14000000 		.4byte	.LVL42
 2184 01ac 1C000000 		.4byte	.LVL43
 2185 01b0 0200     		.2byte	0x2
 2186 01b2 30       		.byte	0x30
 2187 01b3 9F       		.byte	0x9f
 2188 01b4 1C000000 		.4byte	.LVL43
 2189 01b8 22000000 		.4byte	.LVL44
 2190 01bc 0100     		.2byte	0x1
 2191 01be 54       		.byte	0x54
 2192 01bf 00000000 		.4byte	0
 2193 01c3 00000000 		.4byte	0
 2194              	.LLST10:
 2195 01c7 00000000 		.4byte	.LVL45
 2196 01cb 0B000000 		.4byte	.LVL46-1
 2197 01cf 0100     		.2byte	0x1
 2198 01d1 50       		.byte	0x50
 2199 01d2 0B000000 		.4byte	.LVL46-1
 2200 01d6 20000000 		.4byte	.LFE22
 2201 01da 0400     		.2byte	0x4
 2202 01dc F3       		.byte	0xf3
 2203 01dd 01       		.uleb128 0x1
 2204 01de 50       		.byte	0x50
 2205 01df 9F       		.byte	0x9f
 2206 01e0 00000000 		.4byte	0
 2207 01e4 00000000 		.4byte	0
 2208              	.LLST11:
 2209 01e8 06000000 		.4byte	.LVL49
 2210 01ec 1C000000 		.4byte	.LVL50
 2211 01f0 0100     		.2byte	0x1
 2212 01f2 53       		.byte	0x53
 2213 01f3 1C000000 		.4byte	.LVL50
 2214 01f7 24000000 		.4byte	.LFE23
 2215 01fb 0100     		.2byte	0x1
 2216 01fd 50       		.byte	0x50
 2217 01fe 00000000 		.4byte	0
 2218 0202 00000000 		.4byte	0
 2219              	.LLST12:
 2220 0206 06000000 		.4byte	.LVL51
 2221 020a 1B000000 		.4byte	.LVL52-1
 2222 020e 0100     		.2byte	0x1
 2223 0210 50       		.byte	0x50
 2224 0211 00000000 		.4byte	0
 2225 0215 00000000 		.4byte	0
 2226              	.LLST13:
 2227 0219 00000000 		.4byte	.LVL53
 2228 021d 3C000000 		.4byte	.LVL58
 2229 0221 0100     		.2byte	0x1
 2230 0223 50       		.byte	0x50
 2231 0224 3C000000 		.4byte	.LVL58
 2232 0228 58000000 		.4byte	.LFE25
 2233 022c 0400     		.2byte	0x4
 2234 022e F3       		.byte	0xf3
 2235 022f 01       		.uleb128 0x1
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 68


 2236 0230 50       		.byte	0x50
 2237 0231 9F       		.byte	0x9f
 2238 0232 00000000 		.4byte	0
 2239 0236 00000000 		.4byte	0
 2240              	.LLST14:
 2241 023a 22000000 		.4byte	.LVL54
 2242 023e 28000000 		.4byte	.LVL55
 2243 0242 0100     		.2byte	0x1
 2244 0244 53       		.byte	0x53
 2245 0245 34000000 		.4byte	.LVL56
 2246 0249 3A000000 		.4byte	.LVL57
 2247 024d 0100     		.2byte	0x1
 2248 024f 53       		.byte	0x53
 2249 0250 00000000 		.4byte	0
 2250 0254 00000000 		.4byte	0
 2251              		.section	.debug_aranges,"",%progbits
 2252 0000 EC000000 		.4byte	0xec
 2253 0004 0200     		.2byte	0x2
 2254 0006 00000000 		.4byte	.Ldebug_info0
 2255 000a 04       		.byte	0x4
 2256 000b 00       		.byte	0
 2257 000c 0000     		.2byte	0
 2258 000e 0000     		.2byte	0
 2259 0010 00000000 		.4byte	.LFB1
 2260 0014 24000000 		.4byte	.LFE1-.LFB1
 2261 0018 00000000 		.4byte	.LFB2
 2262 001c 30000000 		.4byte	.LFE2-.LFB2
 2263 0020 00000000 		.4byte	.LFB0
 2264 0024 1C000000 		.4byte	.LFE0-.LFB0
 2265 0028 00000000 		.4byte	.LFB3
 2266 002c 30000000 		.4byte	.LFE3-.LFB3
 2267 0030 00000000 		.4byte	.LFB4
 2268 0034 04000000 		.4byte	.LFE4-.LFB4
 2269 0038 00000000 		.4byte	.LFB5
 2270 003c 02000000 		.4byte	.LFE5-.LFB5
 2271 0040 00000000 		.4byte	.LFB6
 2272 0044 0C000000 		.4byte	.LFE6-.LFB6
 2273 0048 00000000 		.4byte	.LFB7
 2274 004c 0C000000 		.4byte	.LFE7-.LFB7
 2275 0050 00000000 		.4byte	.LFB8
 2276 0054 10000000 		.4byte	.LFE8-.LFB8
 2277 0058 00000000 		.4byte	.LFB9
 2278 005c 2C000000 		.4byte	.LFE9-.LFB9
 2279 0060 00000000 		.4byte	.LFB10
 2280 0064 12000000 		.4byte	.LFE10-.LFB10
 2281 0068 00000000 		.4byte	.LFB11
 2282 006c 18000000 		.4byte	.LFE11-.LFB11
 2283 0070 00000000 		.4byte	.LFB12
 2284 0074 24000000 		.4byte	.LFE12-.LFB12
 2285 0078 00000000 		.4byte	.LFB13
 2286 007c 02000000 		.4byte	.LFE13-.LFB13
 2287 0080 00000000 		.4byte	.LFB14
 2288 0084 0C000000 		.4byte	.LFE14-.LFB14
 2289 0088 00000000 		.4byte	.LFB15
 2290 008c 0C000000 		.4byte	.LFE15-.LFB15
 2291 0090 00000000 		.4byte	.LFB16
 2292 0094 0C000000 		.4byte	.LFE16-.LFB16
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 69


 2293 0098 00000000 		.4byte	.LFB17
 2294 009c 14000000 		.4byte	.LFE17-.LFB17
 2295 00a0 00000000 		.4byte	.LFB18
 2296 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2297 00a8 00000000 		.4byte	.LFB19
 2298 00ac 18000000 		.4byte	.LFE19-.LFB19
 2299 00b0 00000000 		.4byte	.LFB20
 2300 00b4 24000000 		.4byte	.LFE20-.LFB20
 2301 00b8 00000000 		.4byte	.LFB21
 2302 00bc 28000000 		.4byte	.LFE21-.LFB21
 2303 00c0 00000000 		.4byte	.LFB22
 2304 00c4 20000000 		.4byte	.LFE22-.LFB22
 2305 00c8 00000000 		.4byte	.LFB23
 2306 00cc 24000000 		.4byte	.LFE23-.LFB23
 2307 00d0 00000000 		.4byte	.LFB24
 2308 00d4 24000000 		.4byte	.LFE24-.LFB24
 2309 00d8 00000000 		.4byte	.LFB25
 2310 00dc 58000000 		.4byte	.LFE25-.LFB25
 2311 00e0 00000000 		.4byte	.LFB26
 2312 00e4 02000000 		.4byte	.LFE26-.LFB26
 2313 00e8 00000000 		.4byte	0
 2314 00ec 00000000 		.4byte	0
 2315              		.section	.debug_ranges,"",%progbits
 2316              	.Ldebug_ranges0:
 2317 0000 00000000 		.4byte	.LFB1
 2318 0004 24000000 		.4byte	.LFE1
 2319 0008 00000000 		.4byte	.LFB2
 2320 000c 30000000 		.4byte	.LFE2
 2321 0010 00000000 		.4byte	.LFB0
 2322 0014 1C000000 		.4byte	.LFE0
 2323 0018 00000000 		.4byte	.LFB3
 2324 001c 30000000 		.4byte	.LFE3
 2325 0020 00000000 		.4byte	.LFB4
 2326 0024 04000000 		.4byte	.LFE4
 2327 0028 00000000 		.4byte	.LFB5
 2328 002c 02000000 		.4byte	.LFE5
 2329 0030 00000000 		.4byte	.LFB6
 2330 0034 0C000000 		.4byte	.LFE6
 2331 0038 00000000 		.4byte	.LFB7
 2332 003c 0C000000 		.4byte	.LFE7
 2333 0040 00000000 		.4byte	.LFB8
 2334 0044 10000000 		.4byte	.LFE8
 2335 0048 00000000 		.4byte	.LFB9
 2336 004c 2C000000 		.4byte	.LFE9
 2337 0050 00000000 		.4byte	.LFB10
 2338 0054 12000000 		.4byte	.LFE10
 2339 0058 00000000 		.4byte	.LFB11
 2340 005c 18000000 		.4byte	.LFE11
 2341 0060 00000000 		.4byte	.LFB12
 2342 0064 24000000 		.4byte	.LFE12
 2343 0068 00000000 		.4byte	.LFB13
 2344 006c 02000000 		.4byte	.LFE13
 2345 0070 00000000 		.4byte	.LFB14
 2346 0074 0C000000 		.4byte	.LFE14
 2347 0078 00000000 		.4byte	.LFB15
 2348 007c 0C000000 		.4byte	.LFE15
 2349 0080 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 70


 2350 0084 0C000000 		.4byte	.LFE16
 2351 0088 00000000 		.4byte	.LFB17
 2352 008c 14000000 		.4byte	.LFE17
 2353 0090 00000000 		.4byte	.LFB18
 2354 0094 0C000000 		.4byte	.LFE18
 2355 0098 00000000 		.4byte	.LFB19
 2356 009c 18000000 		.4byte	.LFE19
 2357 00a0 00000000 		.4byte	.LFB20
 2358 00a4 24000000 		.4byte	.LFE20
 2359 00a8 00000000 		.4byte	.LFB21
 2360 00ac 28000000 		.4byte	.LFE21
 2361 00b0 00000000 		.4byte	.LFB22
 2362 00b4 20000000 		.4byte	.LFE22
 2363 00b8 00000000 		.4byte	.LFB23
 2364 00bc 24000000 		.4byte	.LFE23
 2365 00c0 00000000 		.4byte	.LFB24
 2366 00c4 24000000 		.4byte	.LFE24
 2367 00c8 00000000 		.4byte	.LFB25
 2368 00cc 58000000 		.4byte	.LFE25
 2369 00d0 00000000 		.4byte	.LFB26
 2370 00d4 02000000 		.4byte	.LFE26
 2371 00d8 00000000 		.4byte	0
 2372 00dc 00000000 		.4byte	0
 2373              		.section	.debug_line,"",%progbits
 2374              	.Ldebug_line0:
 2375 0000 A7020000 		.section	.debug_str,"MS",%progbits,1
 2375      02004E00 
 2375      00000201 
 2375      FB0E0D00 
 2375      01010101 
 2376              	.LASF63:
 2377 0000 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_1.c\000"
 2377      72617465 
 2377      645F536F 
 2377      75726365 
 2377      5C50536F 
 2378              	.LASF10:
 2379 0020 75696E74 		.ascii	"uint16\000"
 2379      313600
 2380              	.LASF54:
 2381 0027 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 2381      5F315F43 
 2381      6C656172 
 2381      54784275 
 2381      66666572 
 2382              	.LASF61:
 2383 003c 43794578 		.ascii	"CyExitCriticalSection\000"
 2383      69744372 
 2383      69746963 
 2383      616C5365 
 2383      6374696F 
 2384              	.LASF43:
 2385 0052 74784461 		.ascii	"txDataByte\000"
 2385      74614279 
 2385      746500
 2386              	.LASF46:
 2387 005d 55415254 		.ascii	"UART_1_PutChar\000"
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 71


 2387      5F315F50 
 2387      75744368 
 2387      617200
 2388              	.LASF66:
 2389 006c 55415254 		.ascii	"UART_1_initVar\000"
 2389      5F315F69 
 2389      6E697456 
 2389      617200
 2390              	.LASF48:
 2391 007b 73747269 		.ascii	"string\000"
 2391      6E6700
 2392              	.LASF55:
 2393 0082 55415254 		.ascii	"UART_1_SendBreak\000"
 2393      5F315F53 
 2393      656E6442 
 2393      7265616B 
 2393      00
 2394              	.LASF27:
 2395 0093 55415254 		.ascii	"UART_1_ReadRxData\000"
 2395      5F315F52 
 2395      65616452 
 2395      78446174 
 2395      6100
 2396              	.LASF7:
 2397 00a5 6C6F6E67 		.ascii	"long long unsigned int\000"
 2397      206C6F6E 
 2397      6720756E 
 2397      7369676E 
 2397      65642069 
 2398              	.LASF64:
 2399 00bc 433A5C55 		.ascii	"C:\\Users\\George Anwar\\Documents\\UC Berkeley\\ME"
 2399      73657273 
 2399      5C47656F 
 2399      72676520 
 2399      416E7761 
 2400 00ea 31333520 		.ascii	"135 Spring 2020\\PSOC Creator\\ME135_235\\PIXY2LabV"
 2400      53707269 
 2400      6E672032 
 2400      3032305C 
 2400      50534F43 
 2401 011a 4945572E 		.ascii	"IEW.cydsn\000"
 2401      63796473 
 2401      6E00
 2402              	.LASF53:
 2403 0124 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 2403      5F315F47 
 2403      65745478 
 2403      42756666 
 2403      65725369 
 2404              	.LASF6:
 2405 013b 6C6F6E67 		.ascii	"long long int\000"
 2405      206C6F6E 
 2405      6720696E 
 2405      7400
 2406              	.LASF0:
 2407 0149 7369676E 		.ascii	"signed char\000"
 2407      65642063 
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 72


 2407      68617200 
 2408              	.LASF58:
 2409 0155 74785065 		.ascii	"txPeriod\000"
 2409      72696F64 
 2409      00
 2410              	.LASF52:
 2411 015e 55415254 		.ascii	"UART_1_PutCRLF\000"
 2411      5F315F50 
 2411      75744352 
 2411      4C4600
 2412              	.LASF4:
 2413 016d 6C6F6E67 		.ascii	"long int\000"
 2413      20696E74 
 2413      00
 2414              	.LASF19:
 2415 0176 55415254 		.ascii	"UART_1_Start\000"
 2415      5F315F53 
 2415      74617274 
 2415      00
 2416              	.LASF9:
 2417 0183 75696E74 		.ascii	"uint8\000"
 2417      3800
 2418              	.LASF12:
 2419 0189 646F7562 		.ascii	"double\000"
 2419      6C6500
 2420              	.LASF37:
 2421 0190 61646472 		.ascii	"addressMode\000"
 2421      6573734D 
 2421      6F646500 
 2422              	.LASF24:
 2423 019c 636F6E74 		.ascii	"control\000"
 2423      726F6C00 
 2424              	.LASF23:
 2425 01a4 55415254 		.ascii	"UART_1_SetRxInterruptMode\000"
 2425      5F315F53 
 2425      65745278 
 2425      496E7465 
 2425      72727570 
 2426              	.LASF56:
 2427 01be 7265744D 		.ascii	"retMode\000"
 2427      6F646500 
 2428              	.LASF8:
 2429 01c6 756E7369 		.ascii	"unsigned int\000"
 2429      676E6564 
 2429      20696E74 
 2429      00
 2430              	.LASF45:
 2431 01d3 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 2431      5F315F52 
 2431      65616454 
 2431      78537461 
 2431      74757300 
 2432              	.LASF5:
 2433 01e7 6C6F6E67 		.ascii	"long unsigned int\000"
 2433      20756E73 
 2433      69676E65 
 2433      6420696E 
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 73


 2433      7400
 2434              	.LASF60:
 2435 01f9 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2435      74657243 
 2435      72697469 
 2435      63616C53 
 2435      65637469 
 2436              	.LASF34:
 2437 0210 73697A65 		.ascii	"size\000"
 2437      00
 2438              	.LASF3:
 2439 0215 73686F72 		.ascii	"short unsigned int\000"
 2439      7420756E 
 2439      7369676E 
 2439      65642069 
 2439      6E7400
 2440              	.LASF18:
 2441 0228 55415254 		.ascii	"UART_1_Enable\000"
 2441      5F315F45 
 2441      6E61626C 
 2441      6500
 2442              	.LASF49:
 2443 0236 62756649 		.ascii	"bufIndex\000"
 2443      6E646578 
 2443      00
 2444              	.LASF59:
 2445 023f 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 2445      5F315F53 
 2445      65745478 
 2445      41646472 
 2445      6573734D 
 2446              	.LASF25:
 2447 0257 696E7453 		.ascii	"intSrc\000"
 2447      726300
 2448              	.LASF44:
 2449 025e 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 2449      5F315F52 
 2449      65616443 
 2449      6F6E7472 
 2449      6F6C5265 
 2450              	.LASF20:
 2451 0279 55415254 		.ascii	"UART_1_Stop\000"
 2451      5F315F53 
 2451      746F7000 
 2452              	.LASF32:
 2453 0285 55415254 		.ascii	"UART_1_GetByte\000"
 2453      5F315F47 
 2453      65744279 
 2453      746500
 2454              	.LASF42:
 2455 0294 55415254 		.ascii	"UART_1_WriteTxData\000"
 2455      5F315F57 
 2455      72697465 
 2455      54784461 
 2455      746100
 2456              	.LASF57:
 2457 02a7 746D7053 		.ascii	"tmpStat\000"
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 74


 2457      74617400 
 2458              	.LASF17:
 2459 02af 73697A65 		.ascii	"sizetype\000"
 2459      74797065 
 2459      00
 2460              	.LASF38:
 2461 02b8 55415254 		.ascii	"UART_1_SetRxAddress1\000"
 2461      5F315F53 
 2461      65745278 
 2461      41646472 
 2461      65737331 
 2462              	.LASF40:
 2463 02cd 55415254 		.ascii	"UART_1_SetRxAddress2\000"
 2463      5F315F53 
 2463      65745278 
 2463      41646472 
 2463      65737332 
 2464              	.LASF16:
 2465 02e2 6C6F6E67 		.ascii	"long double\000"
 2465      20646F75 
 2465      626C6500 
 2466              	.LASF39:
 2467 02ee 61646472 		.ascii	"address\000"
 2467      65737300 
 2468              	.LASF31:
 2469 02f6 72785374 		.ascii	"rxStatus\000"
 2469      61747573 
 2469      00
 2470              	.LASF41:
 2471 02ff 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 2471      5F315F53 
 2471      65745478 
 2471      496E7465 
 2471      72727570 
 2472              	.LASF11:
 2473 0319 666C6F61 		.ascii	"float\000"
 2473      7400
 2474              	.LASF47:
 2475 031f 55415254 		.ascii	"UART_1_PutString\000"
 2475      5F315F50 
 2475      75745374 
 2475      72696E67 
 2475      00
 2476              	.LASF35:
 2477 0330 55415254 		.ascii	"UART_1_ClearRxBuffer\000"
 2477      5F315F43 
 2477      6C656172 
 2477      52784275 
 2477      66666572 
 2478              	.LASF36:
 2479 0345 55415254 		.ascii	"UART_1_SetRxAddressMode\000"
 2479      5F315F53 
 2479      65745278 
 2479      41646472 
 2479      6573734D 
 2480              	.LASF15:
 2481 035d 72656738 		.ascii	"reg8\000"
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 75


 2481      00
 2482              	.LASF1:
 2483 0362 756E7369 		.ascii	"unsigned char\000"
 2483      676E6564 
 2483      20636861 
 2483      7200
 2484              	.LASF2:
 2485 0370 73686F72 		.ascii	"short int\000"
 2485      7420696E 
 2485      7400
 2486              	.LASF22:
 2487 037a 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 2487      5F315F57 
 2487      72697465 
 2487      436F6E74 
 2487      726F6C52 
 2488              	.LASF62:
 2489 0396 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2489      43313120 
 2489      352E342E 
 2489      31203230 
 2489      31363036 
 2490 03c9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2490      20726576 
 2490      6973696F 
 2490      6E203233 
 2490      37373135 
 2491 03fc 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2491      66756E63 
 2491      74696F6E 
 2491      2D736563 
 2491      74696F6E 
 2492              	.LASF51:
 2493 0424 62797465 		.ascii	"byteCount\000"
 2493      436F756E 
 2493      7400
 2494              	.LASF33:
 2495 042e 55415254 		.ascii	"UART_1_GetRxBufferSize\000"
 2495      5F315F47 
 2495      65745278 
 2495      42756666 
 2495      65725369 
 2496              	.LASF26:
 2497 0445 72784461 		.ascii	"rxData\000"
 2497      746100
 2498              	.LASF14:
 2499 044c 63686172 		.ascii	"char\000"
 2499      00
 2500              	.LASF13:
 2501 0451 63686172 		.ascii	"char8\000"
 2501      3800
 2502              	.LASF65:
 2503 0457 55415254 		.ascii	"UART_1_Init\000"
 2503      5F315F49 
 2503      6E697400 
 2504              	.LASF21:
 2505 0463 656E6162 		.ascii	"enableInterrupts\000"
ARM GAS  C:\Users\GEORGE~1\AppData\Local\Temp\cci8DzBS.s 			page 76


 2505      6C65496E 
 2505      74657272 
 2505      75707473 
 2505      00
 2506              	.LASF29:
 2507 0474 73746174 		.ascii	"status\000"
 2507      757300
 2508              	.LASF28:
 2509 047b 55415254 		.ascii	"UART_1_ReadRxStatus\000"
 2509      5F315F52 
 2509      65616452 
 2509      78537461 
 2509      74757300 
 2510              	.LASF30:
 2511 048f 55415254 		.ascii	"UART_1_GetChar\000"
 2511      5F315F47 
 2511      65744368 
 2511      617200
 2512              	.LASF50:
 2513 049e 55415254 		.ascii	"UART_1_PutArray\000"
 2513      5F315F50 
 2513      75744172 
 2513      72617900 
 2514              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
