ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 434F4D20 		.ascii	"COM Port Open\000"
  22      506F7274 
  22      204F7065 
  22      6E00
  23 000e 0000     		.align	2
  24              	.LC1:
  25 0010 53616D70 		.ascii	"Sample: %lu mV\015\012\000"
  25      6C653A20 
  25      256C7520 
  25      6D560D0A 
  25      00
  26 0021 000000   		.align	2
  27              	.LC2:
  28 0024 456D756C 		.ascii	"Emulated Data: %x \015\012\000"
  28      61746564 
  28      20446174 
  28      613A2025 
  28      78200D0A 
  29              		.section	.text.main,"ax",%progbits
  30              		.align	2
  31              		.global	main
  32              		.thumb
  33              		.thumb_func
  34              		.type	main, %function
  35              	main:
  36              	.LFB64:
  37              		.file 1 "main.c"
   1:main.c        **** /******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 1.10
   5:main.c        **** *
   6:main.c        **** * Description: This is the source code for the ADC and UART code example.
   7:main.c        **** *
   8:main.c        **** * Related Document: CE195277_ADC_and_UART.pdf
   9:main.c        **** *
ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 2


  10:main.c        **** * Hardware Dependency: See CE195277_ADC_and_UART.pdf
  11:main.c        **** *
  12:main.c        **** *******************************************************************************
  13:main.c        **** * Copyright (2018), Cypress Semiconductor Corporation. All rights reserved.
  14:main.c        **** *******************************************************************************
  15:main.c        **** * This software, including source code, documentation and related materials
  16:main.c        **** * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  17:main.c        **** * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  18:main.c        **** * protection (United States and foreign), United States copyright laws and
  19:main.c        **** * international treaty provisions. Therefore, you may use this Software only
  20:main.c        **** * as provided in the license agreement accompanying the software package from
  21:main.c        **** * which you obtained this Software (“EULA”).
  22:main.c        **** *
  23:main.c        **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  24:main.c        **** * non-transferable license to copy, modify, and compile the Software source
  25:main.c        **** * code solely for use in connection with Cypress’s integrated circuit products.
  26:main.c        **** * Any reproduction, modification, translation, compilation, or representation
  27:main.c        **** * of this Software except as specified above is prohibited without the express
  28:main.c        **** * written permission of Cypress.
  29:main.c        **** *
  30:main.c        **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, 
  31:main.c        **** * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED 
  32:main.c        **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress 
  33:main.c        **** * reserves the right to make changes to the Software without notice. Cypress 
  34:main.c        **** * does not assume any liability arising out of the application or use of the 
  35:main.c        **** * Software or any product or circuit described in the Software. Cypress does 
  36:main.c        **** * not authorize its products for use in any products where a malfunction or 
  37:main.c        **** * failure of the Cypress product may reasonably be expected to result in 
  38:main.c        **** * significant property damage, injury or death (“High Risk Product”). By 
  39:main.c        **** * including Cypress’s product in a High Risk Product, the manufacturer of such 
  40:main.c        **** * system or application assumes all risk of such use and in doing so agrees to 
  41:main.c        **** * indemnify Cypress against all liability.
  42:main.c        **** *******************************************************************************/
  43:main.c        **** 
  44:main.c        **** #include <project.h>
  45:main.c        **** #include "stdio.h"
  46:main.c        **** 
  47:main.c        **** /* Project Defines */
  48:main.c        **** #define FALSE  0
  49:main.c        **** #define TRUE   1
  50:main.c        **** #define TRANSMIT_BUFFER_SIZE  16
  51:main.c        **** 
  52:main.c        **** 
  53:main.c        **** /*******************************************************************************
  54:main.c        **** * Function Name: main
  55:main.c        **** ********************************************************************************
  56:main.c        **** *
  57:main.c        **** * Summary:
  58:main.c        **** *  main() performs following functions:
  59:main.c        **** *  1: Starts the ADC and UART components.
  60:main.c        **** *  2: Checks for ADC end of conversion.  Stores latest result in output
  61:main.c        **** *     if conversion complete.
  62:main.c        **** *  3: Checks for UART input.
  63:main.c        **** *     On 'C' or 'c' received: transmits the last sample via the UART.
  64:main.c        **** *     On 'S' or 's' received: continuously transmits samples as they are completed.
  65:main.c        **** *     On 'X' or 'x' received: stops continuously transmitting samples.
  66:main.c        **** *     On 'E' or 'e' received: transmits a dummy byte of data.
ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 3


  67:main.c        **** *
  68:main.c        **** * Parameters:
  69:main.c        **** *  None.
  70:main.c        **** *
  71:main.c        **** * Return:
  72:main.c        **** *  None.
  73:main.c        **** *
  74:main.c        **** *******************************************************************************/
  75:main.c        **** int main()
  76:main.c        **** {
  38              		.loc 1 76 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 32
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 88B0     		sub	sp, sp, #32
  47              		.cfi_def_cfa_offset 40
  48 0004 00AF     		add	r7, sp, #0
  49              		.cfi_def_cfa_register 7
  77:main.c        ****     /* Variable to store ADC result */
  78:main.c        ****     uint32 Output;
  79:main.c        ****     /* Variable to store UART received character */
  80:main.c        ****     uint8 Ch;
  81:main.c        ****     /* Variable used to send emulated data */
  82:main.c        ****     uint8 EmulatedData;
  83:main.c        ****     /* Flags used to store transmit data commands */
  84:main.c        ****     uint8 ContinuouslySendData;
  85:main.c        ****     uint8 SendSingleByte;
  86:main.c        ****     uint8 SendEmulatedData;
  87:main.c        ****     /* Transmit Buffer */
  88:main.c        ****     char TransmitBuffer[TRANSMIT_BUFFER_SIZE];
  89:main.c        ****     
  90:main.c        ****     /* Start the components */
  91:main.c        ****     ADC_DelSig_1_Start();
  50              		.loc 1 91 0
  51 0006 FFF7FEFF 		bl	ADC_DelSig_1_Start
  92:main.c        ****     UART_1_Start();
  52              		.loc 1 92 0
  53 000a FFF7FEFF 		bl	UART_1_Start
  93:main.c        ****     
  94:main.c        ****     /* Initialize Variables */
  95:main.c        ****     ContinuouslySendData = FALSE;
  54              		.loc 1 95 0
  55 000e 0023     		movs	r3, #0
  56 0010 BB77     		strb	r3, [r7, #30]
  96:main.c        ****     SendSingleByte = FALSE;
  57              		.loc 1 96 0
  58 0012 0023     		movs	r3, #0
  59 0014 7B77     		strb	r3, [r7, #29]
  97:main.c        ****     SendEmulatedData = FALSE;
  60              		.loc 1 97 0
  61 0016 0023     		movs	r3, #0
  62 0018 3B77     		strb	r3, [r7, #28]
  98:main.c        ****     EmulatedData = 0;
ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 4


  63              		.loc 1 98 0
  64 001a 0023     		movs	r3, #0
  65 001c FB77     		strb	r3, [r7, #31]
  99:main.c        ****     
 100:main.c        ****     /* Start the ADC conversion */
 101:main.c        ****     ADC_DelSig_1_StartConvert();
  66              		.loc 1 101 0
  67 001e FFF7FEFF 		bl	ADC_DelSig_1_StartConvert
 102:main.c        ****     
 103:main.c        ****     /* Send message to verify COM port is connected properly */
 104:main.c        ****     UART_1_PutString("COM Port Open");
  68              		.loc 1 104 0
  69 0022 3248     		ldr	r0, .L17
  70 0024 FFF7FEFF 		bl	UART_1_PutString
  71              	.L15:
 105:main.c        ****     
 106:main.c        ****     for(;;)
 107:main.c        ****     {        
 108:main.c        ****         /* Non-blocking call to get the latest data recieved  */
 109:main.c        ****         Ch = UART_1_GetChar();
  72              		.loc 1 109 0
  73 0028 FFF7FEFF 		bl	UART_1_GetChar
  74 002c 0346     		mov	r3, r0
  75 002e FB76     		strb	r3, [r7, #27]
 110:main.c        ****         
 111:main.c        ****         /* Set flags based on UART command */
 112:main.c        ****         switch(Ch)
  76              		.loc 1 112 0
  77 0030 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
  78 0032 582B     		cmp	r3, #88
  79 0034 1FD0     		beq	.L3
  80 0036 582B     		cmp	r3, #88
  81 0038 0BDC     		bgt	.L4
  82 003a 432B     		cmp	r3, #67
  83 003c 15D0     		beq	.L5
  84 003e 432B     		cmp	r3, #67
  85 0040 02DC     		bgt	.L6
  86 0042 002B     		cmp	r3, #0
  87 0044 1DD0     		beq	.L16
 113:main.c        ****         {
 114:main.c        ****             case 0:
 115:main.c        ****                 /* No new data was recieved */
 116:main.c        ****                 break;
 117:main.c        ****             case 'C':
 118:main.c        ****             case 'c':
 119:main.c        ****                 SendSingleByte = TRUE;
 120:main.c        ****                 break;
 121:main.c        ****             case 'S':
 122:main.c        ****             case 's':
 123:main.c        ****                 ContinuouslySendData = TRUE;
 124:main.c        ****                 break;
 125:main.c        ****             case 'X':
 126:main.c        ****             case 'x':
 127:main.c        ****                 ContinuouslySendData = FALSE;
 128:main.c        ****                 break;
 129:main.c        ****             case 'E':
 130:main.c        ****             case 'e':
ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 5


 131:main.c        ****                 SendEmulatedData = TRUE;
 132:main.c        ****                 break;
 133:main.c        ****             default:
 134:main.c        ****                 /* Place error handling code here */
 135:main.c        ****                 break;    
  88              		.loc 1 135 0
  89 0046 1DE0     		b	.L11
  90              	.L6:
 112:main.c        ****         {
  91              		.loc 1 112 0
  92 0048 452B     		cmp	r3, #69
  93 004a 17D0     		beq	.L8
  94 004c 532B     		cmp	r3, #83
  95 004e 0FD0     		beq	.L9
  96              		.loc 1 135 0
  97 0050 18E0     		b	.L11
  98              	.L4:
 112:main.c        ****         {
  99              		.loc 1 112 0
 100 0052 652B     		cmp	r3, #101
 101 0054 12D0     		beq	.L8
 102 0056 652B     		cmp	r3, #101
 103 0058 02DC     		bgt	.L10
 104 005a 632B     		cmp	r3, #99
 105 005c 05D0     		beq	.L5
 106              		.loc 1 135 0
 107 005e 11E0     		b	.L11
 108              	.L10:
 112:main.c        ****         {
 109              		.loc 1 112 0
 110 0060 732B     		cmp	r3, #115
 111 0062 05D0     		beq	.L9
 112 0064 782B     		cmp	r3, #120
 113 0066 06D0     		beq	.L3
 114              		.loc 1 135 0
 115 0068 0CE0     		b	.L11
 116              	.L5:
 119:main.c        ****                 break;
 117              		.loc 1 119 0
 118 006a 0123     		movs	r3, #1
 119 006c 7B77     		strb	r3, [r7, #29]
 120:main.c        ****             case 'S':
 120              		.loc 1 120 0
 121 006e 09E0     		b	.L11
 122              	.L9:
 123:main.c        ****                 break;
 123              		.loc 1 123 0
 124 0070 0123     		movs	r3, #1
 125 0072 BB77     		strb	r3, [r7, #30]
 124:main.c        ****             case 'X':
 126              		.loc 1 124 0
 127 0074 06E0     		b	.L11
 128              	.L3:
 127:main.c        ****                 break;
 129              		.loc 1 127 0
 130 0076 0023     		movs	r3, #0
 131 0078 BB77     		strb	r3, [r7, #30]
ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 6


 128:main.c        ****             case 'E':
 132              		.loc 1 128 0
 133 007a 03E0     		b	.L11
 134              	.L8:
 131:main.c        ****                 break;
 135              		.loc 1 131 0
 136 007c 0123     		movs	r3, #1
 137 007e 3B77     		strb	r3, [r7, #28]
 132:main.c        ****             default:
 138              		.loc 1 132 0
 139 0080 00E0     		b	.L11
 140              	.L16:
 116:main.c        ****             case 'C':
 141              		.loc 1 116 0
 142 0082 00BF     		nop
 143              	.L11:
 136:main.c        ****         }
 137:main.c        ****         
 138:main.c        ****         /* Check to see if an ADC conversion has completed */
 139:main.c        ****         if(ADC_DelSig_1_IsEndConversion(ADC_DelSig_1_RETURN_STATUS))
 144              		.loc 1 139 0
 145 0084 0120     		movs	r0, #1
 146 0086 FFF7FEFF 		bl	ADC_DelSig_1_IsEndConversion
 147 008a 0346     		mov	r3, r0
 148 008c 002B     		cmp	r3, #0
 149 008e CBD0     		beq	.L15
 140:main.c        ****         {
 141:main.c        ****             /* Use the GetResult16 API to get an 8 bit unsigned result in
 142:main.c        ****              * single ended mode.  The API CountsTo_mVolts is then used
 143:main.c        ****              * to convert the ADC counts into mV before transmitting via
 144:main.c        ****              * the UART.  See the datasheet API description for more
 145:main.c        ****              * details */
 146:main.c        ****             Output = ADC_DelSig_1_CountsTo_mVolts(ADC_DelSig_1_GetResult16());
 150              		.loc 1 146 0
 151 0090 FFF7FEFF 		bl	ADC_DelSig_1_GetResult16
 152 0094 0346     		mov	r3, r0
 153 0096 1846     		mov	r0, r3
 154 0098 FFF7FEFF 		bl	ADC_DelSig_1_CountsTo_mVolts
 155 009c 0346     		mov	r3, r0
 156 009e 7B61     		str	r3, [r7, #20]
 147:main.c        ****             
 148:main.c        ****             /* Send data based on last UART command */
 149:main.c        ****             if(SendSingleByte || ContinuouslySendData)
 157              		.loc 1 149 0
 158 00a0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 159 00a2 002B     		cmp	r3, #0
 160 00a4 02D1     		bne	.L13
 161              		.loc 1 149 0 is_stmt 0 discriminator 1
 162 00a6 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 163 00a8 002B     		cmp	r3, #0
 164 00aa 0CD0     		beq	.L14
 165              	.L13:
 150:main.c        ****             {
 151:main.c        ****                 /* Format ADC result for transmition */
 152:main.c        ****                 sprintf(TransmitBuffer, "Sample: %lu mV\r\n", Output);
 166              		.loc 1 152 0 is_stmt 1
 167 00ac 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 7


 168 00ae 7A69     		ldr	r2, [r7, #20]
 169 00b0 0F49     		ldr	r1, .L17+4
 170 00b2 1846     		mov	r0, r3
 171 00b4 FFF7FEFF 		bl	sprintf
 153:main.c        ****                 /* Send out the data */
 154:main.c        ****                 UART_1_PutString(TransmitBuffer);
 172              		.loc 1 154 0
 173 00b8 3B1D     		adds	r3, r7, #4
 174 00ba 1846     		mov	r0, r3
 175 00bc FFF7FEFF 		bl	UART_1_PutString
 155:main.c        ****                 /* Reset the send once flag */
 156:main.c        ****                 SendSingleByte = FALSE;
 176              		.loc 1 156 0
 177 00c0 0023     		movs	r3, #0
 178 00c2 7B77     		strb	r3, [r7, #29]
 179 00c4 11E0     		b	.L12
 180              	.L14:
 157:main.c        ****             }
 158:main.c        ****             else if(SendEmulatedData)
 181              		.loc 1 158 0
 182 00c6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 183 00c8 002B     		cmp	r3, #0
 184 00ca ADD0     		beq	.L15
 159:main.c        ****             {
 160:main.c        ****                 /* Format ADC result for transmition */
 161:main.c        ****                 sprintf(TransmitBuffer, "Emulated Data: %x \r\n", EmulatedData);
 185              		.loc 1 161 0
 186 00cc FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 187 00ce 3B1D     		adds	r3, r7, #4
 188 00d0 0849     		ldr	r1, .L17+8
 189 00d2 1846     		mov	r0, r3
 190 00d4 FFF7FEFF 		bl	sprintf
 162:main.c        ****                 /* Send out the data */
 163:main.c        ****                 UART_1_PutString(TransmitBuffer);
 191              		.loc 1 163 0
 192 00d8 3B1D     		adds	r3, r7, #4
 193 00da 1846     		mov	r0, r3
 194 00dc FFF7FEFF 		bl	UART_1_PutString
 164:main.c        ****                 EmulatedData++;
 195              		.loc 1 164 0
 196 00e0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 197 00e2 0133     		adds	r3, r3, #1
 198 00e4 FB77     		strb	r3, [r7, #31]
 165:main.c        ****                 /* Reset the send once flag */
 166:main.c        ****                 SendEmulatedData = FALSE;   
 199              		.loc 1 166 0
 200 00e6 0023     		movs	r3, #0
 201 00e8 3B77     		strb	r3, [r7, #28]
 202              	.L12:
 167:main.c        ****             }
 168:main.c        ****         }
 169:main.c        ****     }
 203              		.loc 1 169 0
 204 00ea 9DE7     		b	.L15
 205              	.L18:
 206              		.align	2
 207              	.L17:
ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 8


 208 00ec 00000000 		.word	.LC0
 209 00f0 10000000 		.word	.LC1
 210 00f4 24000000 		.word	.LC2
 211              		.cfi_endproc
 212              	.LFE64:
 213              		.size	main, .-main
 214              		.text
 215              	.Letext0:
 216              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 217              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 218              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 219              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 220              		.section	.debug_info,"",%progbits
 221              	.Ldebug_info0:
 222 0000 55010000 		.4byte	0x155
 223 0004 0400     		.2byte	0x4
 224 0006 00000000 		.4byte	.Ldebug_abbrev0
 225 000a 04       		.byte	0x4
 226 000b 01       		.uleb128 0x1
 227 000c 0D000000 		.4byte	.LASF24
 228 0010 0C       		.byte	0xc
 229 0011 7D010000 		.4byte	.LASF25
 230 0015 A2010000 		.4byte	.LASF26
 231 0019 00000000 		.4byte	.Ldebug_ranges0+0
 232 001d 00000000 		.4byte	0
 233 0021 00000000 		.4byte	.Ldebug_line0
 234 0025 02       		.uleb128 0x2
 235 0026 01       		.byte	0x1
 236 0027 06       		.byte	0x6
 237 0028 42020000 		.4byte	.LASF0
 238 002c 02       		.uleb128 0x2
 239 002d 01       		.byte	0x1
 240 002e 08       		.byte	0x8
 241 002f C7000000 		.4byte	.LASF1
 242 0033 02       		.uleb128 0x2
 243 0034 02       		.byte	0x2
 244 0035 05       		.byte	0x5
 245 0036 89010000 		.4byte	.LASF2
 246 003a 02       		.uleb128 0x2
 247 003b 02       		.byte	0x2
 248 003c 07       		.byte	0x7
 249 003d E7000000 		.4byte	.LASF3
 250 0041 03       		.uleb128 0x3
 251 0042 9B000000 		.4byte	.LASF9
 252 0046 02       		.byte	0x2
 253 0047 3F       		.byte	0x3f
 254 0048 4C000000 		.4byte	0x4c
 255 004c 02       		.uleb128 0x2
 256 004d 04       		.byte	0x4
 257 004e 05       		.byte	0x5
 258 004f 99010000 		.4byte	.LASF4
 259 0053 02       		.uleb128 0x2
 260 0054 04       		.byte	0x4
 261 0055 07       		.byte	0x7
 262 0056 D5000000 		.4byte	.LASF5
 263 005a 02       		.uleb128 0x2
 264 005b 08       		.byte	0x8
ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 9


 265 005c 05       		.byte	0x5
 266 005d 6F010000 		.4byte	.LASF6
 267 0061 02       		.uleb128 0x2
 268 0062 08       		.byte	0x8
 269 0063 07       		.byte	0x7
 270 0064 38010000 		.4byte	.LASF7
 271 0068 04       		.uleb128 0x4
 272 0069 04       		.byte	0x4
 273 006a 05       		.byte	0x5
 274 006b 696E7400 		.ascii	"int\000"
 275 006f 02       		.uleb128 0x2
 276 0070 04       		.byte	0x4
 277 0071 07       		.byte	0x7
 278 0072 2B010000 		.4byte	.LASF8
 279 0076 03       		.uleb128 0x3
 280 0077 4F010000 		.4byte	.LASF10
 281 007b 03       		.byte	0x3
 282 007c 2C       		.byte	0x2c
 283 007d 41000000 		.4byte	0x41
 284 0081 05       		.uleb128 0x5
 285 0082 93010000 		.4byte	.LASF11
 286 0086 04       		.byte	0x4
 287 0087 E401     		.2byte	0x1e4
 288 0089 2C000000 		.4byte	0x2c
 289 008d 05       		.uleb128 0x5
 290 008e 24010000 		.4byte	.LASF12
 291 0092 04       		.byte	0x4
 292 0093 E601     		.2byte	0x1e6
 293 0095 53000000 		.4byte	0x53
 294 0099 02       		.uleb128 0x2
 295 009a 04       		.byte	0x4
 296 009b 04       		.byte	0x4
 297 009c C1000000 		.4byte	.LASF13
 298 00a0 02       		.uleb128 0x2
 299 00a1 08       		.byte	0x8
 300 00a2 04       		.byte	0x4
 301 00a3 18010000 		.4byte	.LASF14
 302 00a7 02       		.uleb128 0x2
 303 00a8 01       		.byte	0x1
 304 00a9 08       		.byte	0x8
 305 00aa 84010000 		.4byte	.LASF15
 306 00ae 02       		.uleb128 0x2
 307 00af 08       		.byte	0x8
 308 00b0 04       		.byte	0x4
 309 00b1 36020000 		.4byte	.LASF16
 310 00b5 02       		.uleb128 0x2
 311 00b6 04       		.byte	0x4
 312 00b7 07       		.byte	0x7
 313 00b8 66010000 		.4byte	.LASF17
 314 00bc 06       		.uleb128 0x6
 315 00bd 1F010000 		.4byte	.LASF27
 316 00c1 01       		.byte	0x1
 317 00c2 4B       		.byte	0x4b
 318 00c3 68000000 		.4byte	0x68
 319 00c7 00000000 		.4byte	.LFB64
 320 00cb F8000000 		.4byte	.LFE64-.LFB64
 321 00cf 01       		.uleb128 0x1
ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 10


 322 00d0 9C       		.byte	0x9c
 323 00d1 37010000 		.4byte	0x137
 324 00d5 07       		.uleb128 0x7
 325 00d6 A5000000 		.4byte	.LASF18
 326 00da 01       		.byte	0x1
 327 00db 4E       		.byte	0x4e
 328 00dc 8D000000 		.4byte	0x8d
 329 00e0 02       		.uleb128 0x2
 330 00e1 91       		.byte	0x91
 331 00e2 6C       		.sleb128 -20
 332 00e3 08       		.uleb128 0x8
 333 00e4 436800   		.ascii	"Ch\000"
 334 00e7 01       		.byte	0x1
 335 00e8 50       		.byte	0x50
 336 00e9 81000000 		.4byte	0x81
 337 00ed 02       		.uleb128 0x2
 338 00ee 91       		.byte	0x91
 339 00ef 73       		.sleb128 -13
 340 00f0 07       		.uleb128 0x7
 341 00f1 00000000 		.4byte	.LASF19
 342 00f5 01       		.byte	0x1
 343 00f6 52       		.byte	0x52
 344 00f7 81000000 		.4byte	0x81
 345 00fb 02       		.uleb128 0x2
 346 00fc 91       		.byte	0x91
 347 00fd 77       		.sleb128 -9
 348 00fe 07       		.uleb128 0x7
 349 00ff AC000000 		.4byte	.LASF20
 350 0103 01       		.byte	0x1
 351 0104 54       		.byte	0x54
 352 0105 81000000 		.4byte	0x81
 353 0109 02       		.uleb128 0x2
 354 010a 91       		.byte	0x91
 355 010b 76       		.sleb128 -10
 356 010c 07       		.uleb128 0x7
 357 010d 4E020000 		.4byte	.LASF21
 358 0111 01       		.byte	0x1
 359 0112 55       		.byte	0x55
 360 0113 81000000 		.4byte	0x81
 361 0117 02       		.uleb128 0x2
 362 0118 91       		.byte	0x91
 363 0119 75       		.sleb128 -11
 364 011a 07       		.uleb128 0x7
 365 011b 07010000 		.4byte	.LASF22
 366 011f 01       		.byte	0x1
 367 0120 56       		.byte	0x56
 368 0121 81000000 		.4byte	0x81
 369 0125 02       		.uleb128 0x2
 370 0126 91       		.byte	0x91
 371 0127 74       		.sleb128 -12
 372 0128 07       		.uleb128 0x7
 373 0129 57010000 		.4byte	.LASF23
 374 012d 01       		.byte	0x1
 375 012e 58       		.byte	0x58
 376 012f 37010000 		.4byte	0x137
 377 0133 02       		.uleb128 0x2
 378 0134 91       		.byte	0x91
ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 11


 379 0135 5C       		.sleb128 -36
 380 0136 00       		.byte	0
 381 0137 09       		.uleb128 0x9
 382 0138 A7000000 		.4byte	0xa7
 383 013c 47010000 		.4byte	0x147
 384 0140 0A       		.uleb128 0xa
 385 0141 B5000000 		.4byte	0xb5
 386 0145 0F       		.byte	0xf
 387 0146 00       		.byte	0
 388 0147 0B       		.uleb128 0xb
 389 0148 FA000000 		.4byte	.LASF28
 390 014c 05       		.byte	0x5
 391 014d 1207     		.2byte	0x712
 392 014f 53010000 		.4byte	0x153
 393 0153 0C       		.uleb128 0xc
 394 0154 76000000 		.4byte	0x76
 395 0158 00       		.byte	0
 396              		.section	.debug_abbrev,"",%progbits
 397              	.Ldebug_abbrev0:
 398 0000 01       		.uleb128 0x1
 399 0001 11       		.uleb128 0x11
 400 0002 01       		.byte	0x1
 401 0003 25       		.uleb128 0x25
 402 0004 0E       		.uleb128 0xe
 403 0005 13       		.uleb128 0x13
 404 0006 0B       		.uleb128 0xb
 405 0007 03       		.uleb128 0x3
 406 0008 0E       		.uleb128 0xe
 407 0009 1B       		.uleb128 0x1b
 408 000a 0E       		.uleb128 0xe
 409 000b 55       		.uleb128 0x55
 410 000c 17       		.uleb128 0x17
 411 000d 11       		.uleb128 0x11
 412 000e 01       		.uleb128 0x1
 413 000f 10       		.uleb128 0x10
 414 0010 17       		.uleb128 0x17
 415 0011 00       		.byte	0
 416 0012 00       		.byte	0
 417 0013 02       		.uleb128 0x2
 418 0014 24       		.uleb128 0x24
 419 0015 00       		.byte	0
 420 0016 0B       		.uleb128 0xb
 421 0017 0B       		.uleb128 0xb
 422 0018 3E       		.uleb128 0x3e
 423 0019 0B       		.uleb128 0xb
 424 001a 03       		.uleb128 0x3
 425 001b 0E       		.uleb128 0xe
 426 001c 00       		.byte	0
 427 001d 00       		.byte	0
 428 001e 03       		.uleb128 0x3
 429 001f 16       		.uleb128 0x16
 430 0020 00       		.byte	0
 431 0021 03       		.uleb128 0x3
 432 0022 0E       		.uleb128 0xe
 433 0023 3A       		.uleb128 0x3a
 434 0024 0B       		.uleb128 0xb
 435 0025 3B       		.uleb128 0x3b
ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 12


 436 0026 0B       		.uleb128 0xb
 437 0027 49       		.uleb128 0x49
 438 0028 13       		.uleb128 0x13
 439 0029 00       		.byte	0
 440 002a 00       		.byte	0
 441 002b 04       		.uleb128 0x4
 442 002c 24       		.uleb128 0x24
 443 002d 00       		.byte	0
 444 002e 0B       		.uleb128 0xb
 445 002f 0B       		.uleb128 0xb
 446 0030 3E       		.uleb128 0x3e
 447 0031 0B       		.uleb128 0xb
 448 0032 03       		.uleb128 0x3
 449 0033 08       		.uleb128 0x8
 450 0034 00       		.byte	0
 451 0035 00       		.byte	0
 452 0036 05       		.uleb128 0x5
 453 0037 16       		.uleb128 0x16
 454 0038 00       		.byte	0
 455 0039 03       		.uleb128 0x3
 456 003a 0E       		.uleb128 0xe
 457 003b 3A       		.uleb128 0x3a
 458 003c 0B       		.uleb128 0xb
 459 003d 3B       		.uleb128 0x3b
 460 003e 05       		.uleb128 0x5
 461 003f 49       		.uleb128 0x49
 462 0040 13       		.uleb128 0x13
 463 0041 00       		.byte	0
 464 0042 00       		.byte	0
 465 0043 06       		.uleb128 0x6
 466 0044 2E       		.uleb128 0x2e
 467 0045 01       		.byte	0x1
 468 0046 3F       		.uleb128 0x3f
 469 0047 19       		.uleb128 0x19
 470 0048 03       		.uleb128 0x3
 471 0049 0E       		.uleb128 0xe
 472 004a 3A       		.uleb128 0x3a
 473 004b 0B       		.uleb128 0xb
 474 004c 3B       		.uleb128 0x3b
 475 004d 0B       		.uleb128 0xb
 476 004e 49       		.uleb128 0x49
 477 004f 13       		.uleb128 0x13
 478 0050 11       		.uleb128 0x11
 479 0051 01       		.uleb128 0x1
 480 0052 12       		.uleb128 0x12
 481 0053 06       		.uleb128 0x6
 482 0054 40       		.uleb128 0x40
 483 0055 18       		.uleb128 0x18
 484 0056 9642     		.uleb128 0x2116
 485 0058 19       		.uleb128 0x19
 486 0059 01       		.uleb128 0x1
 487 005a 13       		.uleb128 0x13
 488 005b 00       		.byte	0
 489 005c 00       		.byte	0
 490 005d 07       		.uleb128 0x7
 491 005e 34       		.uleb128 0x34
 492 005f 00       		.byte	0
ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 13


 493 0060 03       		.uleb128 0x3
 494 0061 0E       		.uleb128 0xe
 495 0062 3A       		.uleb128 0x3a
 496 0063 0B       		.uleb128 0xb
 497 0064 3B       		.uleb128 0x3b
 498 0065 0B       		.uleb128 0xb
 499 0066 49       		.uleb128 0x49
 500 0067 13       		.uleb128 0x13
 501 0068 02       		.uleb128 0x2
 502 0069 18       		.uleb128 0x18
 503 006a 00       		.byte	0
 504 006b 00       		.byte	0
 505 006c 08       		.uleb128 0x8
 506 006d 34       		.uleb128 0x34
 507 006e 00       		.byte	0
 508 006f 03       		.uleb128 0x3
 509 0070 08       		.uleb128 0x8
 510 0071 3A       		.uleb128 0x3a
 511 0072 0B       		.uleb128 0xb
 512 0073 3B       		.uleb128 0x3b
 513 0074 0B       		.uleb128 0xb
 514 0075 49       		.uleb128 0x49
 515 0076 13       		.uleb128 0x13
 516 0077 02       		.uleb128 0x2
 517 0078 18       		.uleb128 0x18
 518 0079 00       		.byte	0
 519 007a 00       		.byte	0
 520 007b 09       		.uleb128 0x9
 521 007c 01       		.uleb128 0x1
 522 007d 01       		.byte	0x1
 523 007e 49       		.uleb128 0x49
 524 007f 13       		.uleb128 0x13
 525 0080 01       		.uleb128 0x1
 526 0081 13       		.uleb128 0x13
 527 0082 00       		.byte	0
 528 0083 00       		.byte	0
 529 0084 0A       		.uleb128 0xa
 530 0085 21       		.uleb128 0x21
 531 0086 00       		.byte	0
 532 0087 49       		.uleb128 0x49
 533 0088 13       		.uleb128 0x13
 534 0089 2F       		.uleb128 0x2f
 535 008a 0B       		.uleb128 0xb
 536 008b 00       		.byte	0
 537 008c 00       		.byte	0
 538 008d 0B       		.uleb128 0xb
 539 008e 34       		.uleb128 0x34
 540 008f 00       		.byte	0
 541 0090 03       		.uleb128 0x3
 542 0091 0E       		.uleb128 0xe
 543 0092 3A       		.uleb128 0x3a
 544 0093 0B       		.uleb128 0xb
 545 0094 3B       		.uleb128 0x3b
 546 0095 05       		.uleb128 0x5
 547 0096 49       		.uleb128 0x49
 548 0097 13       		.uleb128 0x13
 549 0098 3F       		.uleb128 0x3f
ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 14


 550 0099 19       		.uleb128 0x19
 551 009a 3C       		.uleb128 0x3c
 552 009b 19       		.uleb128 0x19
 553 009c 00       		.byte	0
 554 009d 00       		.byte	0
 555 009e 0C       		.uleb128 0xc
 556 009f 35       		.uleb128 0x35
 557 00a0 00       		.byte	0
 558 00a1 49       		.uleb128 0x49
 559 00a2 13       		.uleb128 0x13
 560 00a3 00       		.byte	0
 561 00a4 00       		.byte	0
 562 00a5 00       		.byte	0
 563              		.section	.debug_aranges,"",%progbits
 564 0000 1C000000 		.4byte	0x1c
 565 0004 0200     		.2byte	0x2
 566 0006 00000000 		.4byte	.Ldebug_info0
 567 000a 04       		.byte	0x4
 568 000b 00       		.byte	0
 569 000c 0000     		.2byte	0
 570 000e 0000     		.2byte	0
 571 0010 00000000 		.4byte	.LFB64
 572 0014 F8000000 		.4byte	.LFE64-.LFB64
 573 0018 00000000 		.4byte	0
 574 001c 00000000 		.4byte	0
 575              		.section	.debug_ranges,"",%progbits
 576              	.Ldebug_ranges0:
 577 0000 00000000 		.4byte	.LFB64
 578 0004 F8000000 		.4byte	.LFE64
 579 0008 00000000 		.4byte	0
 580 000c 00000000 		.4byte	0
 581              		.section	.debug_line,"",%progbits
 582              	.Ldebug_line0:
 583 0000 A5010000 		.section	.debug_str,"MS",%progbits,1
 583      02004C01 
 583      00000201 
 583      FB0E0D00 
 583      01010101 
 584              	.LASF19:
 585 0000 456D756C 		.ascii	"EmulatedData\000"
 585      61746564 
 585      44617461 
 585      00
 586              	.LASF24:
 587 000d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 587      43313120 
 587      352E342E 
 587      31203230 
 587      31363036 
 588 0040 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 588      20726576 
 588      6973696F 
 588      6E203233 
 588      37373135 
 589 0073 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 589      66756E63 
 589      74696F6E 
ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 15


 589      2D736563 
 589      74696F6E 
 590              	.LASF9:
 591 009b 5F5F696E 		.ascii	"__int32_t\000"
 591      7433325F 
 591      7400
 592              	.LASF18:
 593 00a5 4F757470 		.ascii	"Output\000"
 593      757400
 594              	.LASF20:
 595 00ac 436F6E74 		.ascii	"ContinuouslySendData\000"
 595      696E756F 
 595      75736C79 
 595      53656E64 
 595      44617461 
 596              	.LASF13:
 597 00c1 666C6F61 		.ascii	"float\000"
 597      7400
 598              	.LASF1:
 599 00c7 756E7369 		.ascii	"unsigned char\000"
 599      676E6564 
 599      20636861 
 599      7200
 600              	.LASF5:
 601 00d5 6C6F6E67 		.ascii	"long unsigned int\000"
 601      20756E73 
 601      69676E65 
 601      6420696E 
 601      7400
 602              	.LASF3:
 603 00e7 73686F72 		.ascii	"short unsigned int\000"
 603      7420756E 
 603      7369676E 
 603      65642069 
 603      6E7400
 604              	.LASF28:
 605 00fa 49544D5F 		.ascii	"ITM_RxBuffer\000"
 605      52784275 
 605      66666572 
 605      00
 606              	.LASF22:
 607 0107 53656E64 		.ascii	"SendEmulatedData\000"
 607      456D756C 
 607      61746564 
 607      44617461 
 607      00
 608              	.LASF14:
 609 0118 646F7562 		.ascii	"double\000"
 609      6C6500
 610              	.LASF27:
 611 011f 6D61696E 		.ascii	"main\000"
 611      00
 612              	.LASF12:
 613 0124 75696E74 		.ascii	"uint32\000"
 613      333200
 614              	.LASF8:
 615 012b 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 16


 615      676E6564 
 615      20696E74 
 615      00
 616              	.LASF7:
 617 0138 6C6F6E67 		.ascii	"long long unsigned int\000"
 617      206C6F6E 
 617      6720756E 
 617      7369676E 
 617      65642069 
 618              	.LASF10:
 619 014f 696E7433 		.ascii	"int32_t\000"
 619      325F7400 
 620              	.LASF23:
 621 0157 5472616E 		.ascii	"TransmitBuffer\000"
 621      736D6974 
 621      42756666 
 621      657200
 622              	.LASF17:
 623 0166 73697A65 		.ascii	"sizetype\000"
 623      74797065 
 623      00
 624              	.LASF6:
 625 016f 6C6F6E67 		.ascii	"long long int\000"
 625      206C6F6E 
 625      6720696E 
 625      7400
 626              	.LASF25:
 627 017d 6D61696E 		.ascii	"main.c\000"
 627      2E6300
 628              	.LASF15:
 629 0184 63686172 		.ascii	"char\000"
 629      00
 630              	.LASF2:
 631 0189 73686F72 		.ascii	"short int\000"
 631      7420696E 
 631      7400
 632              	.LASF11:
 633 0193 75696E74 		.ascii	"uint8\000"
 633      3800
 634              	.LASF4:
 635 0199 6C6F6E67 		.ascii	"long int\000"
 635      20696E74 
 635      00
 636              	.LASF26:
 637 01a2 433A5C55 		.ascii	"C:\\Users\\shawn\\Desktop\\Real-Time-Estimation-and"
 637      73657273 
 637      5C736861 
 637      776E5C44 
 637      65736B74 
 638 01d1 2D436F6E 		.ascii	"-Control-For-Satellite-Orbit-Stabilization\\PSOC Mi"
 638      74726F6C 
 638      2D466F72 
 638      2D536174 
 638      656C6C69 
 639 0203 63726F63 		.ascii	"crocontroller Code\\PSOC Microcontroller Code.cydsn"
 639      6F6E7472 
 639      6F6C6C65 
ARM GAS  C:\Users\shawn\AppData\Local\Temp\ccaziCFB.s 			page 17


 639      7220436F 
 639      64655C50 
 640 0235 00       		.ascii	"\000"
 641              	.LASF16:
 642 0236 6C6F6E67 		.ascii	"long double\000"
 642      20646F75 
 642      626C6500 
 643              	.LASF0:
 644 0242 7369676E 		.ascii	"signed char\000"
 644      65642063 
 644      68617200 
 645              	.LASF21:
 646 024e 53656E64 		.ascii	"SendSingleByte\000"
 646      53696E67 
 646      6C654279 
 646      746500
 647              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
